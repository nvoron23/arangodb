{
    "basePath": "/",
    "swaggerVersion": "1.1",
    "apiVersion": "0.1",
    "apis": [
        {
            "operations": [
                {
                    "errorResponses": [
                        {
                            "reason": "is returned if the graph was created successfully and <em>waitForSync</em> was <em>true</em>. <br><br>",
                            "code": "201"
                        },
                        {
                            "reason": "is returned if the graph was created successfully and <em>waitForSync</em> was <em>false</em>. <br><br>",
                            "code": "202"
                        },
                        {
                            "reason": "is returned if it failed. The response body contains an error document in this case. <br><br> <em>Examples</em> <br><br>",
                            "code": "400"
                        }
                    ],
                    "parameters": [
                        {
                            "dataType": "Boolean",
                            "paramType": "query",
                            "required": false,
                            "name": "waitForSync",
                            "description": "Wait until document has been synced to disk. <br><br>"
                        },
                        {
                            "dataType": "Json",
                            "paramType": "body",
                            "required": true,
                            "name": "graph",
                            "description": "The call expects a JSON object as body with the following attributes: <em>_key</em>: The name of the new graph. <em>vertices</em>: The name of the vertices collection. <em>edges</em>: The name of the egde collection. <br><br>"
                        }
                    ],
                    "notes": "Creates a new graph. <br><br> Returns an object with an attribute <em>graph</em> containing a list of all graph properties. <br><br>",
                    "summary": "create graph",
                    "httpMethod": "POST",
                    "examples": "<br><br><pre><code class=\"json\">shell&gt; curl -X POST --data-binary @- --dump - http:<span class=\"hljs-comment\">//localhost:8529/_api/graph/ &lt;&lt;EOF</span>\n{ \n  <span class=\"hljs-string\">\"_key\"</span> : <span class=\"hljs-string\">\"graph\"</span>, \n  <span class=\"hljs-string\">\"vertices\"</span> : <span class=\"hljs-string\">\"vertices\"</span>, \n  <span class=\"hljs-string\">\"edges\"</span> : <span class=\"hljs-string\">\"edges\"</span> \n}\nEOF\n\nHTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">202</span> Accepted\ncontent-type: application/json; charset=utf-<span class=\"hljs-number\">8</span>\netag: <span class=\"hljs-number\">817765126</span>\n\n{ \n  <span class=\"hljs-string\">\"graph\"</span> : { \n    <span class=\"hljs-string\">\"_id\"</span> : <span class=\"hljs-string\">\"_graphs/graph\"</span>, \n    <span class=\"hljs-string\">\"_key\"</span> : <span class=\"hljs-string\">\"graph\"</span>, \n    <span class=\"hljs-string\">\"_rev\"</span> : <span class=\"hljs-string\">\"817765126\"</span>, \n    <span class=\"hljs-string\">\"edgeDefinitions\"</span> : [ \n      { \n        <span class=\"hljs-string\">\"collection\"</span> : <span class=\"hljs-string\">\"edges\"</span>, \n        <span class=\"hljs-string\">\"from\"</span> : [ \n          <span class=\"hljs-string\">\"vertices\"</span> \n        ], \n        <span class=\"hljs-string\">\"to\"</span> : [ \n          <span class=\"hljs-string\">\"vertices\"</span> \n        ] \n      } \n    ] \n  }, \n  <span class=\"hljs-string\">\"error\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"code\"</span> : <span class=\"hljs-number\">202</span> \n}\n</code></pre><br>",
                    "nickname": "createGraph"
                }
            ],
            "path": "/_api/graph"
        },
        {
            "operations": [
                {
                    "errorResponses": [
                        {
                            "reason": "is returned if the graph was found (in case <em>graph-name</em> was specified) or the list of graphs was assembled successfully (in case <em>graph-name</em> was not specified). <br><br>",
                            "code": "200"
                        },
                        {
                            "reason": "is returned if the graph was not found. This response code may only be returned if <em>graph-name</em> is specified in the request. The response body contains an error document in this case. <br><br>",
                            "code": "404"
                        },
                        {
                            "reason": "\"If-None-Match\" header is given and the current graph has not a different version. This response code may only be returned if <em>graph-name</em> is specified in the request. <br><br>",
                            "code": "304"
                        },
                        {
                            "reason": "\"If-Match\" header or <em>rev</em> is given and the current graph has a different version. This response code may only be returned if <em>graph-name</em> is specified in the request. <br><br> <em>Examples</em> <br><br> get graph by name <br><br>",
                            "code": "412"
                        }
                    ],
                    "parameters": [
                        {
                            "dataType": "String",
                            "paramType": "path",
                            "required": false,
                            "name": "graph-name",
                            "description": "The name of the graph. <br><br>"
                        },
                        {
                            "dataType": "String",
                            "paramType": "header",
                            "name": "If-None-Match",
                            "description": "If <em>graph-name</em> is specified, then this header can be used to check whether a specific graph has changed or not. <br><br> If the \"If-None-Match\" header is given, then it must contain exactly one etag. The document is returned if it has a different revision than the given etag. Otherwise a <em>HTTP 304</em> is returned. <br><br>"
                        },
                        {
                            "dataType": "String",
                            "paramType": "header",
                            "name": "If-Match",
                            "description": "If <em>graph-name</em> is specified, then this header can be used to check whether a specific graph has changed or not. <br><br> If the \"If-Match\" header is given, then it must contain exactly one etag. The document is returned, if it has the same revision ad the given etag. Otherwise a <em>HTTP 412</em> is returned. As an alternative you can supply the etag in an attribute <em>rev</em> in the URL. <br><br>"
                        }
                    ],
                    "notes": "<br><br> If <em>graph-name</em> is specified, returns an object with an attribute <em>graph</em> containing a JSON object with all properties of the specified graph. <br><br> If <em>graph-name</em> is not specified, returns a list of graph objects. <br><br>",
                    "summary": "get the properties of a specific or all graphs",
                    "httpMethod": "GET",
                    "examples": "<br><br><pre><code class=\"json\">shell&gt; curl --dump - http:<span class=\"hljs-comment\">//localhost:8529/_api/graph/graph</span>\n\nHTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">200</span> OK\ncontent-type: application/json; charset=utf-<span class=\"hljs-number\">8</span>\netag: <span class=\"hljs-number\">789715718</span>\n\n{ \n  <span class=\"hljs-string\">\"graph\"</span> : { \n    <span class=\"hljs-string\">\"_id\"</span> : <span class=\"hljs-string\">\"_graphs/graph\"</span>, \n    <span class=\"hljs-string\">\"_key\"</span> : <span class=\"hljs-string\">\"graph\"</span>, \n    <span class=\"hljs-string\">\"_rev\"</span> : <span class=\"hljs-string\">\"789715718\"</span>, \n    <span class=\"hljs-string\">\"edgeDefinitions\"</span> : [ \n      { \n        <span class=\"hljs-string\">\"collection\"</span> : <span class=\"hljs-string\">\"edges\"</span>, \n        <span class=\"hljs-string\">\"from\"</span> : [ \n          <span class=\"hljs-string\">\"vertices\"</span> \n        ], \n        <span class=\"hljs-string\">\"to\"</span> : [ \n          <span class=\"hljs-string\">\"vertices\"</span> \n        ] \n      } \n    ] \n  }, \n  <span class=\"hljs-string\">\"error\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"code\"</span> : <span class=\"hljs-number\">200</span> \n}\n</code></pre><br><br><br> get all graphs <br><br><br><br><pre><code class=\"json\">shell&gt; curl --dump - http:<span class=\"hljs-comment\">//localhost:8529/_api/graph</span>\n\nHTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">200</span> OK\ncontent-type: application/json; charset=utf-<span class=\"hljs-number\">8</span>\n\n{ \n  <span class=\"hljs-string\">\"graphs\"</span> : [ \n    { \n      <span class=\"hljs-string\">\"_id\"</span> : <span class=\"hljs-string\">\"_graphs/graph2\"</span>, \n      <span class=\"hljs-string\">\"_key\"</span> : <span class=\"hljs-string\">\"graph2\"</span>, \n      <span class=\"hljs-string\">\"_rev\"</span> : <span class=\"hljs-string\">\"792402694\"</span>, \n      <span class=\"hljs-string\">\"edgeDefinitions\"</span> : [ \n        { \n          <span class=\"hljs-string\">\"collection\"</span> : <span class=\"hljs-string\">\"edges2\"</span>, \n          <span class=\"hljs-string\">\"from\"</span> : [ \n            <span class=\"hljs-string\">\"vertices2\"</span> \n          ], \n          <span class=\"hljs-string\">\"to\"</span> : [ \n            <span class=\"hljs-string\">\"vertices2\"</span> \n          ] \n        } \n      ] \n    }, \n    { \n      <span class=\"hljs-string\">\"_id\"</span> : <span class=\"hljs-string\">\"_graphs/graph1\"</span>, \n      <span class=\"hljs-string\">\"_key\"</span> : <span class=\"hljs-string\">\"graph1\"</span>, \n      <span class=\"hljs-string\">\"_rev\"</span> : <span class=\"hljs-string\">\"791419654\"</span>, \n      <span class=\"hljs-string\">\"edgeDefinitions\"</span> : [ \n        { \n          <span class=\"hljs-string\">\"collection\"</span> : <span class=\"hljs-string\">\"edges1\"</span>, \n          <span class=\"hljs-string\">\"from\"</span> : [ \n            <span class=\"hljs-string\">\"vertices1\"</span> \n          ], \n          <span class=\"hljs-string\">\"to\"</span> : [ \n            <span class=\"hljs-string\">\"vertices1\"</span> \n          ] \n        } \n      ] \n    } \n  ], \n  <span class=\"hljs-string\">\"error\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"code\"</span> : <span class=\"hljs-number\">200</span> \n}\n</code></pre><br>",
                    "nickname": "getThePropertiesOfASpecificOrAllGraphs"
                }
            ],
            "path": "/_api/graph/{graph-name}"
        },
        {
            "operations": [
                {
                    "errorResponses": [
                        {
                            "reason": "is returned if the graph was deleted and <em>waitForSync</em> was <em>true</em>. <br><br>",
                            "code": "200"
                        },
                        {
                            "reason": "is returned if the graph was deleted and <em>waitForSync</em> was <em>false</em>. <br><br>",
                            "code": "202"
                        },
                        {
                            "reason": "is returned if the graph was not found. The response body contains an error document in this case. <br><br>",
                            "code": "404"
                        },
                        {
                            "reason": "\"If-Match\" header or <em>rev</em> is given and the current graph has a different version <br><br> <em>Examples</em> <br><br> delete graph by name <br><br>",
                            "code": "412"
                        }
                    ],
                    "parameters": [
                        {
                            "dataType": "String",
                            "paramType": "path",
                            "required": true,
                            "name": "graph-name",
                            "description": "The name of the graph <br><br>"
                        },
                        {
                            "dataType": "String",
                            "paramType": "header",
                            "name": "If-Match",
                            "description": "If the \"If-Match\" header is given, then it must contain exactly one etag. The document is returned, if it has the same revision ad the given etag. Otherwise a <em>HTTP 412</em> is returned. As an alternative you can supply the etag in an attribute <em>rev</em> in the URL. <br><br>"
                        }
                    ],
                    "notes": "Deletes graph, edges and vertices <br><br>",
                    "summary": "delete graph",
                    "httpMethod": "DELETE",
                    "examples": "<br><br><pre><code class=\"json\">shell&gt; curl -X DELETE --dump - http:<span class=\"hljs-comment\">//localhost:8529/_api/graph/graph</span>\n\nHTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">202</span> Accepted\ncontent-type: application/json; charset=utf-<span class=\"hljs-number\">8</span>\n\n{ \n  <span class=\"hljs-string\">\"deleted\"</span> : <span class=\"hljs-literal\">true</span>, \n  <span class=\"hljs-string\">\"error\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"code\"</span> : <span class=\"hljs-number\">202</span> \n}\n</code></pre><br>",
                    "nickname": "deleteGraph"
                }
            ],
            "path": "/_api/graph/{graph-name}"
        },
        {
            "operations": [
                {
                    "errorResponses": [
                        {
                            "reason": "is returned if the graph was created successfully and <em>waitForSync</em> was <em>true</em>. <br><br>",
                            "code": "201"
                        },
                        {
                            "reason": "is returned if the graph was created successfully and <em>waitForSync</em> was <em>false</em>. <br><br> <em>Examples</em> <br><br>",
                            "code": "202"
                        }
                    ],
                    "parameters": [
                        {
                            "dataType": "String",
                            "paramType": "path",
                            "required": true,
                            "name": "graph-name",
                            "description": "The name of the graph <br><br>"
                        },
                        {
                            "dataType": "Boolean",
                            "paramType": "query",
                            "required": false,
                            "name": "waitForSync",
                            "description": "Wait until document has been sync to disk. <br><br>"
                        },
                        {
                            "dataType": "Json",
                            "paramType": "body",
                            "required": true,
                            "name": "vertex",
                            "description": "The call expects a JSON object as body with the vertex properties:  <ul class=\"swagger-list\"><li><em>_key</em>: The name of the vertex (optional). <li>further optional attributes."
                        }
                    ],
                    "notes": "Creates a vertex in a graph. <br><br> Returns an object with an attribute <em>vertex</em> containing a list of all vertex properties. <br><br>",
                    "summary": "create vertex",
                    "httpMethod": "POST",
                    "examples": "<br><br><pre><code class=\"json\">shell&gt; curl -X POST --data-binary @- --dump - http:<span class=\"hljs-comment\">//localhost:8529/_api/graph/graph/vertex &lt;&lt;EOF</span>\n{ \n  <span class=\"hljs-string\">\"_key\"</span> : <span class=\"hljs-string\">\"v1\"</span>, \n  <span class=\"hljs-string\">\"optional1\"</span> : <span class=\"hljs-string\">\"val1\"</span> \n}\nEOF\n\nHTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">202</span> Accepted\ncontent-type: application/json; charset=utf-<span class=\"hljs-number\">8</span>\netag: <span class=\"hljs-number\">771955462</span>\n\n{ \n  <span class=\"hljs-string\">\"vertex\"</span> : { \n    <span class=\"hljs-string\">\"_id\"</span> : <span class=\"hljs-string\">\"vertices/v1\"</span>, \n    <span class=\"hljs-string\">\"_key\"</span> : <span class=\"hljs-string\">\"v1\"</span>, \n    <span class=\"hljs-string\">\"_rev\"</span> : <span class=\"hljs-string\">\"771955462\"</span>, \n    <span class=\"hljs-string\">\"optional1\"</span> : <span class=\"hljs-string\">\"val1\"</span> \n  }, \n  <span class=\"hljs-string\">\"error\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"code\"</span> : <span class=\"hljs-number\">202</span> \n}\n</code></pre><br>",
                    "nickname": "createVertex"
                }
            ],
            "path": "/_api/graph/{graph-name}/vertex"
        },
        {
            "operations": [
                {
                    "errorResponses": [
                        {
                            "reason": "is returned if the graph was found <br><br>",
                            "code": "200"
                        },
                        {
                            "reason": "\"If-Match\" header is given and the current graph has not a different version <br><br>",
                            "code": "304"
                        },
                        {
                            "reason": "is returned if the graph or vertex was not found. The response body contains an error document in this case. <br><br>",
                            "code": "404"
                        },
                        {
                            "reason": "\"If-None-Match\" header or <em>rev</em> is given and the current graph has a different version <br><br> <em>Examples</em> <br><br> get vertex properties by name <br><br>",
                            "code": "412"
                        }
                    ],
                    "parameters": [
                        {
                            "dataType": "String",
                            "paramType": "path",
                            "required": true,
                            "name": "graph-name",
                            "description": "The name of the graph <br><br>"
                        },
                        {
                            "dataType": "String",
                            "paramType": "path",
                            "required": true,
                            "name": "vertex-name",
                            "description": "The name of the vertex <br><br>"
                        },
                        {
                            "dataType": "String",
                            "paramType": "query",
                            "required": false,
                            "name": "rev",
                            "description": "Revision of a vertex <br><br>"
                        },
                        {
                            "dataType": "String",
                            "paramType": "header",
                            "name": "If-None-Match",
                            "description": "If the \"If-None-Match\" header is given, then it must contain exactly one etag. The document is returned, if it has a different revision than the given etag. Otherwise a <em>HTTP 304</em> is returned. <br><br>"
                        },
                        {
                            "dataType": "String",
                            "paramType": "header",
                            "name": "If-Match",
                            "description": "If the \"If-Match\" header is given, then it must contain exactly one etag. The document is returned, if it has the same revision ad the given etag. Otherwise a <em>HTTP 412</em> is returned. As an alternative you can supply the etag in an attribute <em>rev</em> in the URL. <br><br>"
                        }
                    ],
                    "notes": "Returns an object with an attribute <em>vertex</em> containing a list of all vertex properties. <br><br>",
                    "summary": "get vertex",
                    "httpMethod": "GET",
                    "examples": "<br><br><pre><code class=\"json\">shell&gt; curl --dump - http:<span class=\"hljs-comment\">//localhost:8529/_api/graph/graph/vertex/v1</span>\n\nHTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">200</span> OK\ncontent-type: application/json; charset=utf-<span class=\"hljs-number\">8</span>\netag: <span class=\"hljs-number\">794893062</span>\n\n{ \n  <span class=\"hljs-string\">\"vertex\"</span> : { \n    <span class=\"hljs-string\">\"_id\"</span> : <span class=\"hljs-string\">\"vertices/v1\"</span>, \n    <span class=\"hljs-string\">\"_key\"</span> : <span class=\"hljs-string\">\"v1\"</span>, \n    <span class=\"hljs-string\">\"_rev\"</span> : <span class=\"hljs-string\">\"794893062\"</span>, \n    <span class=\"hljs-string\">\"optional1\"</span> : <span class=\"hljs-string\">\"val1\"</span> \n  }, \n  <span class=\"hljs-string\">\"error\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"code\"</span> : <span class=\"hljs-number\">200</span> \n}\n</code></pre><br>",
                    "nickname": "getVertex"
                }
            ],
            "path": "/_api/graph/{graph-name}/vertex/{vertex-name}"
        },
        {
            "operations": [
                {
                    "errorResponses": [
                        {
                            "reason": "is returned if the vertex was deleted and <em>waitForSync</em> was <em>true</em>. <br><br>",
                            "code": "200"
                        },
                        {
                            "reason": "is returned if the vertex was deleted and <em>waitForSync</em> was <em>false</em>. <br><br>",
                            "code": "202"
                        },
                        {
                            "reason": "is returned if the graph or the vertex was not found. The response body contains an error document in this case. <br><br>",
                            "code": "404"
                        },
                        {
                            "reason": "\"If-Match\" header or <em>rev</em> is given and the current vertex has a different version <br><br> <em>Examples</em> <br><br>",
                            "code": "412"
                        }
                    ],
                    "parameters": [
                        {
                            "dataType": "String",
                            "paramType": "path",
                            "required": true,
                            "name": "graph-name",
                            "description": "The name of the graph <br><br>"
                        },
                        {
                            "dataType": "String",
                            "paramType": "path",
                            "required": true,
                            "name": "vertex-name",
                            "description": "The name of the vertex <br><br>"
                        },
                        {
                            "dataType": "Boolean",
                            "paramType": "query",
                            "required": false,
                            "name": "waitForSync",
                            "description": "Wait until document has been sync to disk. <br><br>"
                        },
                        {
                            "dataType": "String",
                            "paramType": "query",
                            "required": false,
                            "name": "rev",
                            "description": "Revision of a vertex <br><br>"
                        },
                        {
                            "dataType": "String",
                            "paramType": "header",
                            "name": "If-Match",
                            "description": "If the \"If-Match\" header is given, then it must contain exactly one etag. The document is returned, if it has the same revision ad the given etag. Otherwise a <em>HTTP 412</em> is returned. As an alternative you can supply the etag in an attribute <em>rev</em> in the URL. <br><br>"
                        }
                    ],
                    "notes": "Deletes vertex and all in and out edges of the vertex <br><br>",
                    "summary": "delete vertex",
                    "httpMethod": "DELETE",
                    "examples": "<br><br><pre><code class=\"json\">shell&gt; curl -X DELETE --dump - http:<span class=\"hljs-comment\">//localhost:8529/_api/graph/graph/vertex/v1</span>\n\nHTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">202</span> Accepted\ncontent-type: application/json; charset=utf-<span class=\"hljs-number\">8</span>\n\n{ \n  <span class=\"hljs-string\">\"deleted\"</span> : <span class=\"hljs-literal\">true</span>, \n  <span class=\"hljs-string\">\"error\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"code\"</span> : <span class=\"hljs-number\">202</span> \n}\n</code></pre><br>",
                    "nickname": "deleteVertex"
                }
            ],
            "path": "/_api/graph/{graph-name}/vertex/{vertex-name}"
        },
        {
            "operations": [
                {
                    "errorResponses": [
                        {
                            "reason": "is returned if the vertex was updated successfully and <em>waitForSync</em> was <em>true</em>. <br><br>",
                            "code": "201"
                        },
                        {
                            "reason": "is returned if the vertex was updated successfully and <em>waitForSync</em> was <em>false</em>. <br><br>",
                            "code": "202"
                        },
                        {
                            "reason": "is returned if the graph or the vertex was not found. The response body contains an error document in this case. <br><br>",
                            "code": "404"
                        },
                        {
                            "reason": "\"If-Match\" header or <em>rev</em> is given and the current vertex has a different version <br><br> <em>Examples</em> <br><br>",
                            "code": "412"
                        }
                    ],
                    "parameters": [
                        {
                            "dataType": "String",
                            "paramType": "path",
                            "required": true,
                            "name": "graph-name",
                            "description": "The name of the graph <br><br>"
                        },
                        {
                            "dataType": "String",
                            "paramType": "path",
                            "required": true,
                            "name": "vertex-name",
                            "description": "The name of the vertex <br><br>"
                        },
                        {
                            "dataType": "Boolean",
                            "paramType": "query",
                            "required": false,
                            "name": "waitForSync",
                            "description": "Wait until vertex has been sync to disk. <br><br>"
                        },
                        {
                            "dataType": "String",
                            "paramType": "query",
                            "required": false,
                            "name": "rev",
                            "description": "Revision of a vertex <br><br>"
                        },
                        {
                            "dataType": "Json",
                            "paramType": "body",
                            "required": true,
                            "name": "vertex",
                            "description": "The call expects a JSON object as body with the new vertex properties. <br><br>"
                        },
                        {
                            "dataType": "String",
                            "paramType": "header",
                            "name": "if-match",
                            "description": "If the \"If-Match\" header is given, then it must contain exactly one etag. The document is updated, if it has the same revision ad the given etag. Otherwise a <em>HTTP 412</em> is returned. As an alternative you can supply the etag in an attribute <em>rev</em> in the URL. <br><br>"
                        }
                    ],
                    "notes": "Replaces the vertex properties. <br><br> Returns an object with an attribute <em>vertex</em> containing a list of all vertex properties. <br><br>",
                    "summary": "update vertex",
                    "httpMethod": "PUT",
                    "examples": "<br><br><pre><code class=\"json\">shell&gt; curl -X PUT --data-binary @- --dump - http:<span class=\"hljs-comment\">//localhost:8529/_api/graph/graph/vertex/v1 &lt;&lt;EOF</span>\n{ \n  <span class=\"hljs-string\">\"optional1\"</span> : <span class=\"hljs-string\">\"val2\"</span> \n}\nEOF\n\nHTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">202</span> Accepted\ncontent-type: application/json; charset=utf-<span class=\"hljs-number\">8</span>\netag: <span class=\"hljs-number\">760814342</span>\n\n{ \n  <span class=\"hljs-string\">\"vertex\"</span> : { \n    <span class=\"hljs-string\">\"_id\"</span> : <span class=\"hljs-string\">\"vertices/v1\"</span>, \n    <span class=\"hljs-string\">\"_key\"</span> : <span class=\"hljs-string\">\"v1\"</span>, \n    <span class=\"hljs-string\">\"_rev\"</span> : <span class=\"hljs-string\">\"760814342\"</span>, \n    <span class=\"hljs-string\">\"optional1\"</span> : <span class=\"hljs-string\">\"val2\"</span> \n  }, \n  <span class=\"hljs-string\">\"error\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"code\"</span> : <span class=\"hljs-number\">202</span> \n}\n</code></pre><br>",
                    "nickname": "updateVertex"
                }
            ],
            "path": "/_api/graph/{graph-name}/vertex/{vertex-name}"
        },
        {
            "operations": [
                {
                    "errorResponses": [
                        {
                            "reason": "is returned if the vertex was updated successfully and <em>waitForSync</em> was <em>true</em>. <br><br>",
                            "code": "201"
                        },
                        {
                            "reason": "is returned if the vertex was updated successfully and <em>waitForSync</em> was <em>false</em>. <br><br>",
                            "code": "202"
                        },
                        {
                            "reason": "is returned if the graph or the vertex was not found. The response body contains an error document in this case. <br><br>",
                            "code": "404"
                        },
                        {
                            "reason": "\"If-Match\" header or <em>rev</em> is given and the current vertex has a different version <br><br> <em>Examples</em> <br><br>",
                            "code": "412"
                        }
                    ],
                    "parameters": [
                        {
                            "dataType": "String",
                            "paramType": "path",
                            "required": true,
                            "name": "graph-name",
                            "description": "The name of the graph <br><br>"
                        },
                        {
                            "dataType": "String",
                            "paramType": "path",
                            "required": true,
                            "name": "vertex-name",
                            "description": "The name of the vertex <br><br>"
                        },
                        {
                            "dataType": "Boolean",
                            "paramType": "query",
                            "required": false,
                            "name": "waitForSync",
                            "description": "Wait until vertex has been sync to disk. <br><br>"
                        },
                        {
                            "dataType": "String",
                            "paramType": "query",
                            "required": false,
                            "name": "rev",
                            "description": "Revision of a vertex <br><br>"
                        },
                        {
                            "dataType": "Boolean",
                            "paramType": "query",
                            "required": false,
                            "name": "keepNull",
                            "description": "Modify the behavior of the patch command to remove any attribute <br><br>"
                        },
                        {
                            "dataType": "Json",
                            "paramType": "body",
                            "required": true,
                            "name": "graph",
                            "description": "The call expects a JSON object as body with the properties to patch. <br><br>"
                        },
                        {
                            "dataType": "String",
                            "paramType": "header",
                            "name": "if-match",
                            "description": "If the \"If-Match\" header is given, then it must contain exactly one etag. The document is updated, if it has the same revision ad the given etag. Otherwise a <em>HTTP 412</em> is returned. As an alternative you can supply the etag in an attribute <em>rev</em> in the URL. <br><br>"
                        }
                    ],
                    "notes": "Partially updates the vertex properties. <br><br> Setting an attribute value to <em>null</em> in the patch document will cause a value of <em>null</em> be saved for the attribute by default. If the intention is to delete existing attributes with the patch command, the URL parameter <em>keepNull</em> can be used with a value of <em>false</em>. This will modify the behavior of the patch command to remove any attributes from the existing document that are contained in the patch document with an attribute value of <em>null</em>. <br><br> Returns an object with an attribute <em>vertex</em> containing a list of all vertex properties. <br><br>",
                    "summary": "update vertex",
                    "httpMethod": "PATCH",
                    "examples": "<br><br><pre><code class=\"json\">shell&gt; curl -X PATCH --data-binary @- --dump - http:<span class=\"hljs-comment\">//localhost:8529/_api/graph/graph/vertex/v1 &lt;&lt;EOF</span>\n{ \n  <span class=\"hljs-string\">\"optional1\"</span> : <span class=\"hljs-string\">\"vertexPatch\"</span> \n}\nEOF\n\nHTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">202</span> Accepted\ncontent-type: application/json; charset=utf-<span class=\"hljs-number\">8</span>\netag: <span class=\"hljs-number\">766712582</span>\n\n{ \n  <span class=\"hljs-string\">\"vertex\"</span> : { \n    <span class=\"hljs-string\">\"_id\"</span> : <span class=\"hljs-string\">\"vertices/v1\"</span>, \n    <span class=\"hljs-string\">\"_key\"</span> : <span class=\"hljs-string\">\"v1\"</span>, \n    <span class=\"hljs-string\">\"_rev\"</span> : <span class=\"hljs-string\">\"766712582\"</span>, \n    <span class=\"hljs-string\">\"optional1\"</span> : <span class=\"hljs-string\">\"vertexPatch\"</span> \n  }, \n  <span class=\"hljs-string\">\"error\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"code\"</span> : <span class=\"hljs-number\">202</span> \n}\nshell&gt; curl -X PATCH --data-binary @- --dump - http:<span class=\"hljs-comment\">//localhost:8529/_api/graph/graph/vertex/v1 &lt;&lt;EOF</span>\n{ \n  <span class=\"hljs-string\">\"optional1\"</span> : <span class=\"hljs-literal\">null</span> \n}\nEOF\n\nHTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">202</span> Accepted\ncontent-type: application/json; charset=utf-<span class=\"hljs-number\">8</span>\netag: <span class=\"hljs-number\">767236870</span>\n\n{ \n  <span class=\"hljs-string\">\"vertex\"</span> : { \n    <span class=\"hljs-string\">\"_id\"</span> : <span class=\"hljs-string\">\"vertices/v1\"</span>, \n    <span class=\"hljs-string\">\"_key\"</span> : <span class=\"hljs-string\">\"v1\"</span>, \n    <span class=\"hljs-string\">\"_rev\"</span> : <span class=\"hljs-string\">\"767236870\"</span>, \n    <span class=\"hljs-string\">\"optional1\"</span> : <span class=\"hljs-literal\">null</span> \n  }, \n  <span class=\"hljs-string\">\"error\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"code\"</span> : <span class=\"hljs-number\">202</span> \n}\n</code></pre><br>",
                    "nickname": "updateVertex"
                }
            ],
            "path": "/_api/graph/{graph-name}/vertex/{vertex-name}"
        },
        {
            "operations": [
                {
                    "errorResponses": [
                        {
                            "reason": "is returned if the cursor was created <br><br> <em>Examples</em> <br><br> Select all vertices <br><br>",
                            "code": "201"
                        }
                    ],
                    "parameters": [
                        {
                            "dataType": "String",
                            "paramType": "path",
                            "required": true,
                            "name": "graph-name",
                            "description": "The name of the graph <br><br>"
                        },
                        {
                            "dataType": "Json",
                            "paramType": "body",
                            "required": true,
                            "name": "filter",
                            "description": "The call expects a JSON object as body to filter the result: <br><br>"
                        }
                    ],
                    "notes": "Returns a cursor. <br><br> The call expects a JSON object as body to filter the result: <br><br>  <ul class=\"swagger-list\"><li><em>batchSize</em>: the batch size of the returned cursor <li><em>limit</em>: limit the result size <li><em>count</em>: return the total number of results (default \"false\") <li><em>filter</em>: an optional filter  </ul> The attributes of filter  <ul class=\"swagger-list\"><li><em>properties</em>: filter by an array of vertex properties  </ul> The attributes of a property filter  <ul class=\"swagger-list\"><li><em>key</em>: filter the result vertices by a key value pair <li><em>value</em>: the value of the <em>key</em> <li><em>compare</em>: a compare operator",
                    "summary": "get vertices",
                    "httpMethod": "POST",
                    "examples": "<br><br><pre><code class=\"json\">shell&gt; curl -X POST --data-binary @- --dump - http:<span class=\"hljs-comment\">//localhost:8529/_api/graph/graph/vertices &lt;&lt;EOF</span>\n{ \n  <span class=\"hljs-string\">\"batchSize\"</span> : <span class=\"hljs-number\">100</span> \n}\nEOF\n\nHTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">201</span> Created\ncontent-type: application/json; charset=utf-<span class=\"hljs-number\">8</span>\n\n{ \n  <span class=\"hljs-string\">\"result\"</span> : [ \n    { \n      <span class=\"hljs-string\">\"_id\"</span> : <span class=\"hljs-string\">\"vertices/v3\"</span>, \n      <span class=\"hljs-string\">\"_key\"</span> : <span class=\"hljs-string\">\"v3\"</span>, \n      <span class=\"hljs-string\">\"_rev\"</span> : <span class=\"hljs-string\">\"815471366\"</span>, \n      <span class=\"hljs-string\">\"optional1\"</span> : <span class=\"hljs-string\">\"val1\"</span> \n    }, \n    { \n      <span class=\"hljs-string\">\"_id\"</span> : <span class=\"hljs-string\">\"vertices/v2\"</span>, \n      <span class=\"hljs-string\">\"_key\"</span> : <span class=\"hljs-string\">\"v2\"</span>, \n      <span class=\"hljs-string\">\"_rev\"</span> : <span class=\"hljs-string\">\"815078150\"</span>, \n      <span class=\"hljs-string\">\"optional1\"</span> : <span class=\"hljs-string\">\"val1\"</span> \n    }, \n    { \n      <span class=\"hljs-string\">\"_id\"</span> : <span class=\"hljs-string\">\"vertices/v5\"</span>, \n      <span class=\"hljs-string\">\"_key\"</span> : <span class=\"hljs-string\">\"v5\"</span>, \n      <span class=\"hljs-string\">\"_rev\"</span> : <span class=\"hljs-string\">\"816257798\"</span>, \n      <span class=\"hljs-string\">\"optional1\"</span> : <span class=\"hljs-string\">\"val1\"</span> \n    }, \n    { \n      <span class=\"hljs-string\">\"_id\"</span> : <span class=\"hljs-string\">\"vertices/v4\"</span>, \n      <span class=\"hljs-string\">\"_key\"</span> : <span class=\"hljs-string\">\"v4\"</span>, \n      <span class=\"hljs-string\">\"_rev\"</span> : <span class=\"hljs-string\">\"815864582\"</span>, \n      <span class=\"hljs-string\">\"optional1\"</span> : <span class=\"hljs-string\">\"val1\"</span> \n    }, \n    { \n      <span class=\"hljs-string\">\"_id\"</span> : <span class=\"hljs-string\">\"vertices/v1\"</span>, \n      <span class=\"hljs-string\">\"_key\"</span> : <span class=\"hljs-string\">\"v1\"</span>, \n      <span class=\"hljs-string\">\"_rev\"</span> : <span class=\"hljs-string\">\"814684934\"</span>, \n      <span class=\"hljs-string\">\"optional1\"</span> : <span class=\"hljs-string\">\"val1\"</span> \n    } \n  ], \n  <span class=\"hljs-string\">\"hasMore\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"extra\"</span> : { \n    <span class=\"hljs-string\">\"stats\"</span> : { \n      <span class=\"hljs-string\">\"writesExecuted\"</span> : <span class=\"hljs-number\">0</span>, \n      <span class=\"hljs-string\">\"writesIgnored\"</span> : <span class=\"hljs-number\">0</span>, \n      <span class=\"hljs-string\">\"scannedFull\"</span> : <span class=\"hljs-number\">5</span>, \n      <span class=\"hljs-string\">\"scannedIndex\"</span> : <span class=\"hljs-number\">0</span>, \n      <span class=\"hljs-string\">\"filtered\"</span> : <span class=\"hljs-number\">0</span> \n    }, \n    <span class=\"hljs-string\">\"warnings\"</span> : [ ] \n  }, \n  <span class=\"hljs-string\">\"error\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"code\"</span> : <span class=\"hljs-number\">201</span> \n}\n</code></pre><br>",
                    "nickname": "getVertices"
                }
            ],
            "path": "/_api/graph/{graph-name}/vertices"
        },
        {
            "operations": [
                {
                    "errorResponses": [
                        {
                            "reason": "is returned if the cursor was created <br><br> <em>Examples</em> <br><br> Select all vertices <br><br>",
                            "code": "201"
                        }
                    ],
                    "parameters": [
                        {
                            "dataType": "String",
                            "paramType": "path",
                            "required": true,
                            "name": "graph-name",
                            "description": "The name of the graph <br><br>"
                        },
                        {
                            "dataType": "String",
                            "paramType": "path",
                            "required": true,
                            "name": "vertex-name",
                            "description": "The key of the vertex <br><br>"
                        },
                        {
                            "dataType": "Json",
                            "paramType": "body",
                            "required": true,
                            "name": "graph",
                            "description": "The call expects a JSON object as body to filter the result: <br><br>"
                        }
                    ],
                    "notes": "Returns a cursor. <br><br> The call expects a JSON object as body to filter the result: <br><br>  <ul class=\"swagger-list\"><li><em>batchSize</em>: the batch size of the returned cursor <li><em>limit</em>: limit the result size <li><em>count</em>: return the total number of results (default \"false\") <li><em>filter</em>: a optional filter  </ul> The attributes of filter  <ul class=\"swagger-list\"><li><em>direction</em>: Filter for inbound (value \"in\") or outbound (value \"out\") neighbors. Default value is \"any\". <li><em>labels</em>: filter by an array of edge labels (empty array means no restriction) <li><em>properties</em>: filter neighbors by an array of edge properties  </ul> The attributes of a property filter  <ul class=\"swagger-list\"><li><em>key</em>: filter the result vertices by a key value pair <li><em>value</em>: the value of the <em>key</em> <li><em>compare</em>: a compare operator",
                    "summary": "get vertices",
                    "httpMethod": "POST",
                    "examples": "<br><br><pre><code class=\"json\">shell&gt; curl -X POST --data-binary @- --dump - http:<span class=\"hljs-comment\">//localhost:8529/_api/graph/graph/vertices/v2 &lt;&lt;EOF</span>\n{<span class=\"hljs-string\">\"batchSize\"</span> : <span class=\"hljs-number\">100</span>, <span class=\"hljs-string\">\"filter\"</span> : {<span class=\"hljs-string\">\"direction\"</span> : <span class=\"hljs-string\">\"any\"</span>, <span class=\"hljs-string\">\"properties\"</span>:[] }}\nEOF\n\nHTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">201</span> Created\ncontent-type: application/json; charset=utf-<span class=\"hljs-number\">8</span>\n\n{ \n  <span class=\"hljs-string\">\"result\"</span> : [ \n    <span class=\"hljs-literal\">null</span>, \n    <span class=\"hljs-literal\">null</span> \n  ], \n  <span class=\"hljs-string\">\"hasMore\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"extra\"</span> : { \n    <span class=\"hljs-string\">\"stats\"</span> : { \n      <span class=\"hljs-string\">\"writesExecuted\"</span> : <span class=\"hljs-number\">0</span>, \n      <span class=\"hljs-string\">\"writesIgnored\"</span> : <span class=\"hljs-number\">0</span>, \n      <span class=\"hljs-string\">\"scannedFull\"</span> : <span class=\"hljs-number\">0</span>, \n      <span class=\"hljs-string\">\"scannedIndex\"</span> : <span class=\"hljs-number\">0</span>, \n      <span class=\"hljs-string\">\"filtered\"</span> : <span class=\"hljs-number\">0</span> \n    }, \n    <span class=\"hljs-string\">\"warnings\"</span> : [ ] \n  }, \n  <span class=\"hljs-string\">\"error\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"code\"</span> : <span class=\"hljs-number\">201</span> \n}\n</code></pre><br><br><br> Select vertices by direction and property filter <br><br><br><br><pre><code class=\"json\">shell&gt; curl -X POST --data-binary @- --dump - http:<span class=\"hljs-comment\">//localhost:8529/_api/graph/graph/vertices/v2 &lt;&lt;EOF</span>\n{<span class=\"hljs-string\">\"batchSize\"</span> : <span class=\"hljs-number\">100</span>, <span class=\"hljs-string\">\"filter\"</span> : {<span class=\"hljs-string\">\"direction\"</span> : <span class=\"hljs-string\">\"out\"</span>, <span class=\"hljs-string\">\"properties\"</span>:[ { <span class=\"hljs-string\">\"key\"</span>: <span class=\"hljs-string\">\"optional1\"</span>, <span class=\"hljs-string\">\"value\"</span>: <span class=\"hljs-string\">\"val2\"</span>, <span class=\"hljs-string\">\"compare\"</span> : <span class=\"hljs-string\">\"==\"</span> }, ] }}\nEOF\n\nHTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">201</span> Created\ncontent-type: application/json; charset=utf-<span class=\"hljs-number\">8</span>\n\n{ \n  <span class=\"hljs-string\">\"result\"</span> : [ \n    <span class=\"hljs-literal\">null</span>, \n    <span class=\"hljs-literal\">null</span> \n  ], \n  <span class=\"hljs-string\">\"hasMore\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"extra\"</span> : { \n    <span class=\"hljs-string\">\"stats\"</span> : { \n      <span class=\"hljs-string\">\"writesExecuted\"</span> : <span class=\"hljs-number\">0</span>, \n      <span class=\"hljs-string\">\"writesIgnored\"</span> : <span class=\"hljs-number\">0</span>, \n      <span class=\"hljs-string\">\"scannedFull\"</span> : <span class=\"hljs-number\">0</span>, \n      <span class=\"hljs-string\">\"scannedIndex\"</span> : <span class=\"hljs-number\">0</span>, \n      <span class=\"hljs-string\">\"filtered\"</span> : <span class=\"hljs-number\">0</span> \n    }, \n    <span class=\"hljs-string\">\"warnings\"</span> : [ ] \n  }, \n  <span class=\"hljs-string\">\"error\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"code\"</span> : <span class=\"hljs-number\">201</span> \n}\n</code></pre><br>",
                    "nickname": "getVertices"
                }
            ],
            "path": "/_api/graph/{graph-name}/vertices/{vertex-name}"
        },
        {
            "operations": [
                {
                    "errorResponses": [
                        {
                            "reason": "is returned if the edge was created successfully and <em>waitForSync</em> was <em>true</em>. <br><br>",
                            "code": "201"
                        },
                        {
                            "reason": "is returned if the edge was created successfully and <em>waitForSync</em> was <em>false</em>. <br><br> <em>Examples</em> <br><br>",
                            "code": "202"
                        }
                    ],
                    "parameters": [
                        {
                            "dataType": "String",
                            "paramType": "path",
                            "required": true,
                            "name": "graph-name",
                            "description": "The name of the graph <br><br>"
                        },
                        {
                            "dataType": "Boolean",
                            "paramType": "query",
                            "required": false,
                            "name": "waitForSync",
                            "description": "Wait until edge has been sync to disk. <br><br>"
                        },
                        {
                            "dataType": "Json",
                            "paramType": "body",
                            "required": true,
                            "name": "edge",
                            "description": "The call expects a JSON object as body with the edge properties: <br><br>"
                        }
                    ],
                    "notes": "Creates an edge in a graph. <br><br> The call expects a JSON object as body with the edge properties: <br><br>  <ul class=\"swagger-list\"><li><em>_key</em>: The name of the edge (optional, if edge collection allows user defined keys). <li><em>_from</em>: The name of the from vertex. <li><em>_to</em>: The name of the to vertex. <li><em>$label</em>: A label for the edge (optional). <li>further optional attributes.  </ul> Returns an object with an attribute <em>edge</em> containing the list of all edge properties. <br><br>",
                    "summary": "create edge",
                    "httpMethod": "POST",
                    "examples": "<br><br><pre><code class=\"json\">shell&gt; curl -X POST --data-binary @- --dump - http:<span class=\"hljs-comment\">//localhost:8529/_api/graph/graph/edge &lt;&lt;EOF</span>\n{ \n  <span class=\"hljs-string\">\"_key\"</span> : <span class=\"hljs-string\">\"edge1\"</span>, \n  <span class=\"hljs-string\">\"_from\"</span> : <span class=\"hljs-string\">\"vert2\"</span>, \n  <span class=\"hljs-string\">\"_to\"</span> : <span class=\"hljs-string\">\"vert1\"</span>, \n  <span class=\"hljs-string\">\"optional1\"</span> : <span class=\"hljs-string\">\"val1\"</span> \n}\nEOF\n\nHTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">202</span> Accepted\ncontent-type: application/json; charset=utf-<span class=\"hljs-number\">8</span>\netag: <span class=\"hljs-number\">770120454</span>\n\n{ \n  <span class=\"hljs-string\">\"edge\"</span> : { \n    <span class=\"hljs-string\">\"_id\"</span> : <span class=\"hljs-string\">\"edges/edge1\"</span>, \n    <span class=\"hljs-string\">\"_key\"</span> : <span class=\"hljs-string\">\"edge1\"</span>, \n    <span class=\"hljs-string\">\"_rev\"</span> : <span class=\"hljs-string\">\"770120454\"</span>, \n    <span class=\"hljs-string\">\"_from\"</span> : <span class=\"hljs-string\">\"vertices/vert2\"</span>, \n    <span class=\"hljs-string\">\"_to\"</span> : <span class=\"hljs-string\">\"vertices/vert1\"</span>, \n    <span class=\"hljs-string\">\"$label\"</span> : <span class=\"hljs-literal\">null</span>, \n    <span class=\"hljs-string\">\"optional1\"</span> : <span class=\"hljs-string\">\"val1\"</span> \n  }, \n  <span class=\"hljs-string\">\"error\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"code\"</span> : <span class=\"hljs-number\">202</span> \n}\n</code></pre><br>",
                    "nickname": "createEdge"
                }
            ],
            "path": "/_api/graph/{graph-name}/edge"
        },
        {
            "operations": [
                {
                    "errorResponses": [
                        {
                            "reason": "is returned if the edge was found <br><br>",
                            "code": "200"
                        },
                        {
                            "reason": "\"If-Match\" header is given and the current edge has not a different version <br><br>",
                            "code": "304"
                        },
                        {
                            "reason": "is returned if the graph or edge was not found. The response body contains an error document in this case. <br><br>",
                            "code": "404"
                        },
                        {
                            "reason": "\"If-None-Match\" header or <em>rev</em> is given and the current edge has a different version <br><br> <em>Examples</em> <br><br>",
                            "code": "412"
                        }
                    ],
                    "parameters": [
                        {
                            "dataType": "String",
                            "paramType": "path",
                            "required": true,
                            "name": "graph-name",
                            "description": "The name of the graph <br><br>"
                        },
                        {
                            "dataType": "String",
                            "paramType": "path",
                            "required": true,
                            "name": "edge-name",
                            "description": "The name of the edge <br><br>"
                        },
                        {
                            "dataType": "String",
                            "paramType": "query",
                            "required": false,
                            "name": "rev",
                            "description": "Revision of an edge <br><br>"
                        },
                        {
                            "dataType": "String",
                            "paramType": "header",
                            "name": "if-none-match",
                            "description": "If the \"If-None-Match\" header is given, then it must contain exactly one etag. The document is returned, if it has a different revision than the given etag. Otherwise a <em>HTTP 304</em> is returned. <br><br>"
                        },
                        {
                            "dataType": "String",
                            "paramType": "header",
                            "name": "if-match",
                            "description": "If the \"If-Match\" header is given, then it must contain exactly one etag. The document is returned, if it has the same revision ad the given etag. Otherwise a <em>HTTP 412</em> is returned. As an alternative you can supply the etag in an attribute <em>rev</em> in the URL. <br><br>"
                        }
                    ],
                    "notes": "Returns an object with an attribute <em>edge</em> containing a list of all edge properties. <br><br>",
                    "summary": "get edge",
                    "httpMethod": "GET",
                    "examples": "<br><br><pre><code class=\"json\">shell&gt; curl --dump - http:<span class=\"hljs-comment\">//localhost:8529/_api/graph/graph/edge/edge1</span>\n\nHTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">200</span> OK\ncontent-type: application/json; charset=utf-<span class=\"hljs-number\">8</span>\netag: <span class=\"hljs-number\">782244614</span>\n\n{ \n  <span class=\"hljs-string\">\"edge\"</span> : { \n    <span class=\"hljs-string\">\"_id\"</span> : <span class=\"hljs-string\">\"edges/edge1\"</span>, \n    <span class=\"hljs-string\">\"_key\"</span> : <span class=\"hljs-string\">\"edge1\"</span>, \n    <span class=\"hljs-string\">\"_rev\"</span> : <span class=\"hljs-string\">\"782244614\"</span>, \n    <span class=\"hljs-string\">\"_from\"</span> : <span class=\"hljs-string\">\"vertices/vert1\"</span>, \n    <span class=\"hljs-string\">\"_to\"</span> : <span class=\"hljs-string\">\"vertices/vert2\"</span>, \n    <span class=\"hljs-string\">\"$label\"</span> : <span class=\"hljs-literal\">null</span>, \n    <span class=\"hljs-string\">\"optional1\"</span> : <span class=\"hljs-string\">\"val1\"</span> \n  }, \n  <span class=\"hljs-string\">\"error\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"code\"</span> : <span class=\"hljs-number\">200</span> \n}\n</code></pre><br>",
                    "nickname": "getEdge"
                }
            ],
            "path": "/_api/graph/{graph-name}/edge/{edge-name}"
        },
        {
            "operations": [
                {
                    "errorResponses": [
                        {
                            "reason": "is returned if the edge was deletd successfully and <em>waitForSync</em> was <em>true</em>. <br><br>",
                            "code": "200"
                        },
                        {
                            "reason": "is returned if the edge was deleted successfully and <em>waitForSync</em> was <em>false</em>. <br><br>",
                            "code": "202"
                        },
                        {
                            "reason": "is returned if the graph or the edge was not found. The response body contains an error document in this case. <br><br>",
                            "code": "404"
                        },
                        {
                            "reason": "\"If-Match\" header or <em>rev</em> is given and the current edge has a different version <br><br> <em>Examples</em> <br><br>",
                            "code": "412"
                        }
                    ],
                    "parameters": [
                        {
                            "dataType": "String",
                            "paramType": "path",
                            "required": true,
                            "name": "graph-name",
                            "description": "The name of the graph <br><br>"
                        },
                        {
                            "dataType": "String",
                            "paramType": "path",
                            "required": true,
                            "name": "edge-name",
                            "description": "The name of the edge <br><br>"
                        },
                        {
                            "dataType": "Boolean",
                            "paramType": "query",
                            "required": false,
                            "name": "waitForSync",
                            "description": "Wait until edge has been sync to disk. <br><br>"
                        },
                        {
                            "dataType": "String",
                            "paramType": "query",
                            "required": false,
                            "name": "rev",
                            "description": "Revision of an edge <br><br>"
                        },
                        {
                            "dataType": "String",
                            "paramType": "header",
                            "name": "if-match",
                            "description": "If the \"If-Match\" header is given, then it must contain exactly one etag. The document is returned, if it has the same revision ad the given etag. Otherwise a <em>HTTP 412</em> is returned. As an alternative you can supply the etag in an attribute <em>rev</em> in the URL. <br><br>"
                        }
                    ],
                    "notes": "Deletes an edge of the graph <br><br>",
                    "summary": "delete edge",
                    "httpMethod": "DELETE",
                    "examples": "<br><br><pre><code class=\"json\">shell&gt; curl -X DELETE --dump - http:<span class=\"hljs-comment\">//localhost:8529/_api/graph/graph/edge/edge1</span>\n\nHTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">202</span> Accepted\ncontent-type: application/json; charset=utf-<span class=\"hljs-number\">8</span>\n\n{ \n  <span class=\"hljs-string\">\"deleted\"</span> : <span class=\"hljs-literal\">true</span>, \n  <span class=\"hljs-string\">\"error\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"code\"</span> : <span class=\"hljs-number\">202</span> \n}\n</code></pre><br>",
                    "nickname": "deleteEdge"
                }
            ],
            "path": "/_api/graph/{graph-name}/edge/{edge-name}"
        },
        {
            "operations": [
                {
                    "errorResponses": [
                        {
                            "reason": "is returned if the edge was updated successfully and <em>waitForSync</em> was <em>true</em>. <br><br>",
                            "code": "201"
                        },
                        {
                            "reason": "is returned if the edge was updated successfully and <em>waitForSync</em> was <em>false</em>. <br><br>",
                            "code": "202"
                        },
                        {
                            "reason": "is returned if the graph or the edge was not found. The response body contains an error document in this case. <br><br>",
                            "code": "404"
                        },
                        {
                            "reason": "\"If-Match\" header or <em>rev</em> is given and the current edge has a different version <br><br> <em>Examples</em> <br><br>",
                            "code": "412"
                        }
                    ],
                    "parameters": [
                        {
                            "dataType": "String",
                            "paramType": "path",
                            "required": true,
                            "name": "graph-name",
                            "description": "The name of the graph <br><br>"
                        },
                        {
                            "dataType": "String",
                            "paramType": "path",
                            "required": true,
                            "name": "edge-name",
                            "description": "The name of the edge <br><br>"
                        },
                        {
                            "dataType": "Boolean",
                            "paramType": "query",
                            "required": false,
                            "name": "waitForSync",
                            "description": "Wait until edge has been sync to disk. <br><br>"
                        },
                        {
                            "dataType": "String",
                            "paramType": "query",
                            "required": false,
                            "name": "rev",
                            "description": "Revision of an edge <br><br>"
                        },
                        {
                            "dataType": "Json",
                            "paramType": "body",
                            "required": true,
                            "name": "edge",
                            "description": "The call expects a JSON object as body with the new edge properties. <br><br>"
                        },
                        {
                            "dataType": "String",
                            "paramType": "header",
                            "name": "if-match",
                            "description": "If the \"If-Match\" header is given, then it must contain exactly one etag. The document is returned, if it has the same revision ad the given etag. Otherwise a <em>HTTP 412</em> is returned. As an alternative you can supply the etag in an attribute <em>rev</em> in the URL. <br><br>"
                        }
                    ],
                    "notes": "Replaces the optional edge properties. <br><br> The call expects a JSON object as body with the new edge properties. <br><br> Returns an object with an attribute <em>edge</em> containing a list of all edge properties. <br><br>",
                    "summary": "update edge",
                    "httpMethod": "PUT",
                    "examples": "<br><br><pre><code class=\"json\">shell&gt; curl -X PUT --data-binary @- --dump - http:<span class=\"hljs-comment\">//localhost:8529/_api/graph/graph/edge/edge1 &lt;&lt;EOF</span>\n{ \n  <span class=\"hljs-string\">\"optional1\"</span> : <span class=\"hljs-string\">\"val2\"</span> \n}\nEOF\n\nHTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">202</span> Accepted\ncontent-type: application/json; charset=utf-<span class=\"hljs-number\">8</span>\netag: <span class=\"hljs-number\">758520582</span>\n\n{ \n  <span class=\"hljs-string\">\"edge\"</span> : { \n    <span class=\"hljs-string\">\"_id\"</span> : <span class=\"hljs-string\">\"edges/edge1\"</span>, \n    <span class=\"hljs-string\">\"_key\"</span> : <span class=\"hljs-string\">\"edge1\"</span>, \n    <span class=\"hljs-string\">\"_rev\"</span> : <span class=\"hljs-string\">\"758520582\"</span>, \n    <span class=\"hljs-string\">\"_from\"</span> : <span class=\"hljs-string\">\"vertices/vert1\"</span>, \n    <span class=\"hljs-string\">\"_to\"</span> : <span class=\"hljs-string\">\"vertices/vert2\"</span>, \n    <span class=\"hljs-string\">\"$label\"</span> : <span class=\"hljs-literal\">null</span>, \n    <span class=\"hljs-string\">\"optional1\"</span> : <span class=\"hljs-string\">\"val2\"</span> \n  }, \n  <span class=\"hljs-string\">\"error\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"code\"</span> : <span class=\"hljs-number\">202</span> \n}\n</code></pre><br>",
                    "nickname": "updateEdge"
                }
            ],
            "path": "/_api/graph/{graph-name}/edge/{edge-name}"
        },
        {
            "operations": [
                {
                    "errorResponses": [
                        {
                            "reason": "is returned if the edge was updated successfully and <em>waitForSync</em> was <em>true</em>. <br><br>",
                            "code": "201"
                        },
                        {
                            "reason": "is returned if the edge was updated successfully and <em>waitForSync</em> was <em>false</em>. <br><br>",
                            "code": "202"
                        },
                        {
                            "reason": "is returned if the graph or the edge was not found. The response body contains an error document in this case. <br><br>",
                            "code": "404"
                        },
                        {
                            "reason": "\"If-Match\" header or <em>rev</em> is given and the current edge has a different version <br><br> <em>Examples</em> <br><br>",
                            "code": "412"
                        }
                    ],
                    "parameters": [
                        {
                            "dataType": "String",
                            "paramType": "path",
                            "required": true,
                            "name": "graph-name",
                            "description": "The name of the graph <br><br>"
                        },
                        {
                            "dataType": "String",
                            "paramType": "path",
                            "required": true,
                            "name": "edge-name",
                            "description": "The name of the edge <br><br>"
                        },
                        {
                            "dataType": "Boolean",
                            "paramType": "query",
                            "required": false,
                            "name": "waitForSync",
                            "description": "Wait until edge has been sync to disk. <br><br>"
                        },
                        {
                            "dataType": "String",
                            "paramType": "query",
                            "required": false,
                            "name": "rev",
                            "description": "Revision of an edge <br><br>"
                        },
                        {
                            "dataType": "Boolean",
                            "paramType": "query",
                            "required": false,
                            "name": "keepNull",
                            "description": "Modify the behavior of the patch command to remove any attribute <br><br>"
                        },
                        {
                            "dataType": "Json",
                            "paramType": "body",
                            "required": true,
                            "name": "edge-properties",
                            "description": "The call expects a JSON object as body with the properties to patch. <br><br>"
                        },
                        {
                            "dataType": "String",
                            "paramType": "header",
                            "name": "if-match",
                            "description": "If the \"If-Match\" header is given, then it must contain exactly one etag. The document is returned, if it has the same revision ad the given etag. Otherwise a <em>HTTP 412</em> is returned. As an alternative you can supply the etag in an attribute <em>rev</em> in the URL. <br><br>"
                        }
                    ],
                    "notes": "Partially updates the edge properties. <br><br> Setting an attribute value to <em>null</em> in the patch document will cause a value of <em>null</em> be saved for the attribute by default. If the intention is to delete existing attributes with the patch command, the URL parameter <em>keepNull</em> can be used with a value of <em>false</em>. This will modify the behavior of the patch command to remove any attributes from the existing document that are contained in the patch document with an attribute value of <em>null</em>. <br><br> Returns an object with an attribute <em>edge</em> containing a list of all edge properties. <br><br>",
                    "summary": "update edge",
                    "httpMethod": "PATCH",
                    "examples": "<br><br><pre><code class=\"json\">shell&gt; curl -X PATCH --data-binary @- --dump - http:<span class=\"hljs-comment\">//localhost:8529/_api/graph/graph/edge/edge1 &lt;&lt;EOF</span>\n{ \n  <span class=\"hljs-string\">\"optional3\"</span> : <span class=\"hljs-string\">\"val3\"</span> \n}\nEOF\n\nHTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">202</span> Accepted\ncontent-type: application/json; charset=utf-<span class=\"hljs-number\">8</span>\netag: <span class=\"hljs-number\">764353286</span>\n\n{ \n  <span class=\"hljs-string\">\"edge\"</span> : { \n    <span class=\"hljs-string\">\"_id\"</span> : <span class=\"hljs-string\">\"edges/edge1\"</span>, \n    <span class=\"hljs-string\">\"_key\"</span> : <span class=\"hljs-string\">\"edge1\"</span>, \n    <span class=\"hljs-string\">\"_rev\"</span> : <span class=\"hljs-string\">\"764353286\"</span>, \n    <span class=\"hljs-string\">\"_from\"</span> : <span class=\"hljs-string\">\"vertices/vert1\"</span>, \n    <span class=\"hljs-string\">\"_to\"</span> : <span class=\"hljs-string\">\"vertices/vert2\"</span>, \n    <span class=\"hljs-string\">\"$label\"</span> : <span class=\"hljs-literal\">null</span>, \n    <span class=\"hljs-string\">\"optional1\"</span> : <span class=\"hljs-string\">\"val1\"</span>, \n    <span class=\"hljs-string\">\"optional3\"</span> : <span class=\"hljs-string\">\"val3\"</span> \n  }, \n  <span class=\"hljs-string\">\"error\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"code\"</span> : <span class=\"hljs-number\">202</span> \n}\n</code></pre><br>",
                    "nickname": "updateEdge"
                }
            ],
            "path": "/_api/graph/{graph-name}/edge/{edge-name}"
        },
        {
            "operations": [
                {
                    "errorResponses": [
                        {
                            "reason": "is returned if the cursor was created <br><br> <em>Examples</em> <br><br> Select all edges <br><br>",
                            "code": "201"
                        }
                    ],
                    "parameters": [
                        {
                            "dataType": "String",
                            "paramType": "path",
                            "required": true,
                            "name": "graph-name",
                            "description": "The name of the graph <br><br>"
                        },
                        {
                            "dataType": "Json",
                            "paramType": "body",
                            "required": true,
                            "name": "edge-properties",
                            "description": "The call expects a JSON object as body to filter the result: <br><br>"
                        }
                    ],
                    "notes": "Returns a cursor. <br><br> The call expects a JSON object as body to filter the result: <br><br>  <ul class=\"swagger-list\"><li><em>batchSize</em>: the batch size of the returned cursor <li><em>limit</em>: limit the result size <li><em>count</em>: return the total number of results (default \"false\") <li><em>filter</em>: a optional filter  </ul> The attributes of filter  <ul class=\"swagger-list\"><li><em>labels</em>: filter by an array of edge labels <li><em>properties</em>: filter by an array of edge properties  </ul> The attributes of a property filter  <ul class=\"swagger-list\"><li><em>key</em>: filter the result edges by a key value pair <li><em>value</em>: the value of the <em>key</em> <li><em>compare</em>: a compare operator",
                    "summary": "get edges",
                    "httpMethod": "POST",
                    "examples": "<br><br><pre><code class=\"json\">shell&gt; curl -X POST --data-binary @- --dump - http:<span class=\"hljs-comment\">//localhost:8529/_api/graph/graph/edges &lt;&lt;EOF</span>\n{ \n  <span class=\"hljs-string\">\"batchSize\"</span> : <span class=\"hljs-number\">100</span> \n}\nEOF\n\nHTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">201</span> Created\ncontent-type: application/json; charset=utf-<span class=\"hljs-number\">8</span>\n\n{ \n  <span class=\"hljs-string\">\"result\"</span> : [ \n    { \n      <span class=\"hljs-string\">\"_id\"</span> : <span class=\"hljs-string\">\"edges/edge2\"</span>, \n      <span class=\"hljs-string\">\"_key\"</span> : <span class=\"hljs-string\">\"edge2\"</span>, \n      <span class=\"hljs-string\">\"_rev\"</span> : <span class=\"hljs-string\">\"787159814\"</span>, \n      <span class=\"hljs-string\">\"_from\"</span> : <span class=\"hljs-string\">\"vertices/v1\"</span>, \n      <span class=\"hljs-string\">\"_to\"</span> : <span class=\"hljs-string\">\"vertices/v3\"</span>, \n      <span class=\"hljs-string\">\"$label\"</span> : <span class=\"hljs-literal\">null</span>, \n      <span class=\"hljs-string\">\"optional1\"</span> : <span class=\"hljs-string\">\"val1\"</span> \n    }, \n    { \n      <span class=\"hljs-string\">\"_id\"</span> : <span class=\"hljs-string\">\"edges/edge3\"</span>, \n      <span class=\"hljs-string\">\"_key\"</span> : <span class=\"hljs-string\">\"edge3\"</span>, \n      <span class=\"hljs-string\">\"_rev\"</span> : <span class=\"hljs-string\">\"787684102\"</span>, \n      <span class=\"hljs-string\">\"_from\"</span> : <span class=\"hljs-string\">\"vertices/v2\"</span>, \n      <span class=\"hljs-string\">\"_to\"</span> : <span class=\"hljs-string\">\"vertices/v4\"</span>, \n      <span class=\"hljs-string\">\"$label\"</span> : <span class=\"hljs-literal\">null</span>, \n      <span class=\"hljs-string\">\"optional1\"</span> : <span class=\"hljs-string\">\"val1\"</span> \n    }, \n    { \n      <span class=\"hljs-string\">\"_id\"</span> : <span class=\"hljs-string\">\"edges/edge1\"</span>, \n      <span class=\"hljs-string\">\"_key\"</span> : <span class=\"hljs-string\">\"edge1\"</span>, \n      <span class=\"hljs-string\">\"_rev\"</span> : <span class=\"hljs-string\">\"786635526\"</span>, \n      <span class=\"hljs-string\">\"_from\"</span> : <span class=\"hljs-string\">\"vertices/v1\"</span>, \n      <span class=\"hljs-string\">\"_to\"</span> : <span class=\"hljs-string\">\"vertices/v2\"</span>, \n      <span class=\"hljs-string\">\"$label\"</span> : <span class=\"hljs-literal\">null</span>, \n      <span class=\"hljs-string\">\"optional1\"</span> : <span class=\"hljs-string\">\"val1\"</span> \n    }, \n    { \n      <span class=\"hljs-string\">\"_id\"</span> : <span class=\"hljs-string\">\"edges/edge4\"</span>, \n      <span class=\"hljs-string\">\"_key\"</span> : <span class=\"hljs-string\">\"edge4\"</span>, \n      <span class=\"hljs-string\">\"_rev\"</span> : <span class=\"hljs-string\">\"788208390\"</span>, \n      <span class=\"hljs-string\">\"_from\"</span> : <span class=\"hljs-string\">\"vertices/v1\"</span>, \n      <span class=\"hljs-string\">\"_to\"</span> : <span class=\"hljs-string\">\"vertices/v5\"</span>, \n      <span class=\"hljs-string\">\"$label\"</span> : <span class=\"hljs-literal\">null</span>, \n      <span class=\"hljs-string\">\"optional1\"</span> : <span class=\"hljs-string\">\"val1\"</span> \n    } \n  ], \n  <span class=\"hljs-string\">\"hasMore\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"extra\"</span> : { \n    <span class=\"hljs-string\">\"stats\"</span> : { \n      <span class=\"hljs-string\">\"writesExecuted\"</span> : <span class=\"hljs-number\">0</span>, \n      <span class=\"hljs-string\">\"writesIgnored\"</span> : <span class=\"hljs-number\">0</span>, \n      <span class=\"hljs-string\">\"scannedFull\"</span> : <span class=\"hljs-number\">4</span>, \n      <span class=\"hljs-string\">\"scannedIndex\"</span> : <span class=\"hljs-number\">0</span>, \n      <span class=\"hljs-string\">\"filtered\"</span> : <span class=\"hljs-number\">0</span> \n    }, \n    <span class=\"hljs-string\">\"warnings\"</span> : [ ] \n  }, \n  <span class=\"hljs-string\">\"error\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"code\"</span> : <span class=\"hljs-number\">201</span> \n}\n</code></pre><br>",
                    "nickname": "getEdges"
                }
            ],
            "path": "/_api/graph/{graph-name}/edges"
        },
        {
            "operations": [
                {
                    "errorResponses": [
                        {
                            "reason": "is returned if the cursor was created <br><br> <em>Examples</em> <br><br> Select all edges <br><br>",
                            "code": "201"
                        }
                    ],
                    "parameters": [
                        {
                            "dataType": "String",
                            "paramType": "path",
                            "required": true,
                            "name": "graph-name",
                            "description": "The name of the graph <br><br>"
                        },
                        {
                            "dataType": "String",
                            "paramType": "path",
                            "required": true,
                            "name": "vertex-name",
                            "description": "The name of the vertex <br><br>"
                        },
                        {
                            "dataType": "Json",
                            "paramType": "body",
                            "required": true,
                            "name": "edge-properties",
                            "description": "The call expects a JSON object as body to filter the result: <br><br>"
                        }
                    ],
                    "notes": "<br><br> Returns a cursor. <br><br> The call expects a JSON object as body to filter the result: <br><br>  <ul class=\"swagger-list\"><li><em>batchSize</em>: the batch size of the returned cursor <li><em>limit</em>: limit the result size <li><em>count</em>: return the total number of results (default \"false\") <li><em>filter</em>: a optional filter  </ul> The attributes of filter  <ul class=\"swagger-list\"><li><em>direction</em>: Filter for inbound (value \"in\") or outbound (value \"out\") neighbors. Default value is \"any\". <li><em>labels</em>: filter by an array of edge labels <li><em>properties</em>: filter neighbors by an array of properties  </ul> The attributes of a property filter  <ul class=\"swagger-list\"><li><em>key</em>: filter the result vertices by a key value pair <li><em>value</em>: the value of the <em>key</em> <li><em>compare</em>: a compare operator",
                    "summary": "get edges",
                    "httpMethod": "POST",
                    "examples": "<br><br><pre><code class=\"json\">shell&gt; curl -X POST --data-binary @- --dump - http:<span class=\"hljs-comment\">//localhost:8529/_api/graph/graph/edges/v2 &lt;&lt;EOF</span>\n{<span class=\"hljs-string\">\"batchSize\"</span> : <span class=\"hljs-number\">100</span>, <span class=\"hljs-string\">\"filter\"</span> : { <span class=\"hljs-string\">\"direction\"</span> : <span class=\"hljs-string\">\"any\"</span> }}\nEOF\n\nHTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">201</span> Created\ncontent-type: application/json; charset=utf-<span class=\"hljs-number\">8</span>\n\n{ \n  <span class=\"hljs-string\">\"result\"</span> : [ \n    { \n      <span class=\"hljs-string\">\"_id\"</span> : <span class=\"hljs-string\">\"edges/edge1\"</span>, \n      <span class=\"hljs-string\">\"_key\"</span> : <span class=\"hljs-string\">\"edge1\"</span>, \n      <span class=\"hljs-string\">\"_rev\"</span> : <span class=\"hljs-string\">\"799218438\"</span>, \n      <span class=\"hljs-string\">\"_from\"</span> : <span class=\"hljs-string\">\"vertices/v1\"</span>, \n      <span class=\"hljs-string\">\"_to\"</span> : <span class=\"hljs-string\">\"vertices/v2\"</span>, \n      <span class=\"hljs-string\">\"$label\"</span> : <span class=\"hljs-literal\">null</span>, \n      <span class=\"hljs-string\">\"optional1\"</span> : <span class=\"hljs-string\">\"val1\"</span> \n    }, \n    { \n      <span class=\"hljs-string\">\"_id\"</span> : <span class=\"hljs-string\">\"edges/edge3\"</span>, \n      <span class=\"hljs-string\">\"_key\"</span> : <span class=\"hljs-string\">\"edge3\"</span>, \n      <span class=\"hljs-string\">\"_rev\"</span> : <span class=\"hljs-string\">\"800267014\"</span>, \n      <span class=\"hljs-string\">\"_from\"</span> : <span class=\"hljs-string\">\"vertices/v2\"</span>, \n      <span class=\"hljs-string\">\"_to\"</span> : <span class=\"hljs-string\">\"vertices/v4\"</span>, \n      <span class=\"hljs-string\">\"$label\"</span> : <span class=\"hljs-literal\">null</span>, \n      <span class=\"hljs-string\">\"optional1\"</span> : <span class=\"hljs-string\">\"val1\"</span> \n    } \n  ], \n  <span class=\"hljs-string\">\"hasMore\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"extra\"</span> : { \n    <span class=\"hljs-string\">\"stats\"</span> : { \n      <span class=\"hljs-string\">\"writesExecuted\"</span> : <span class=\"hljs-number\">0</span>, \n      <span class=\"hljs-string\">\"writesIgnored\"</span> : <span class=\"hljs-number\">0</span>, \n      <span class=\"hljs-string\">\"scannedFull\"</span> : <span class=\"hljs-number\">0</span>, \n      <span class=\"hljs-string\">\"scannedIndex\"</span> : <span class=\"hljs-number\">0</span>, \n      <span class=\"hljs-string\">\"filtered\"</span> : <span class=\"hljs-number\">0</span> \n    }, \n    <span class=\"hljs-string\">\"warnings\"</span> : [ ] \n  }, \n  <span class=\"hljs-string\">\"error\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"code\"</span> : <span class=\"hljs-number\">201</span> \n}\n</code></pre><br>",
                    "nickname": "getEdges"
                }
            ],
            "path": "/_api/graph/{graph-name}/edges/{vertex-name}"
        }
    ]
}
