{
    "basePath": "/",
    "swaggerVersion": "1.1",
    "apiVersion": "0.1",
    "apis": [
        {
            "operations": [
                {
                    "errorResponses": [
                        {
                            "reason": "is returned if all documents could be imported successfully. <br><br>",
                            "code": "201"
                        },
                        {
                            "reason": "is returned if <em>type</em> contains an invalid value, no <em>collection</em> is specified, the documents are incorrectly encoded, or the request is malformed. <br><br>",
                            "code": "400"
                        },
                        {
                            "reason": "is returned if <em>collection</em> or the <em>_from</em> or <em>_to</em> attributes of an imported edge refer to an unknown collection. <br><br>",
                            "code": "404"
                        },
                        {
                            "reason": "is returned if the import would trigger a unique key violation and <em>complete</em> is set to <em>true</em>. <br><br>",
                            "code": "409"
                        },
                        {
                            "reason": "is returned if the server cannot auto-generate a document key (out of keys error) for a document with no user-defined key. <br><br>",
                            "code": "500"
                        },
                        {
                            "reason": "The server will respond with <em>HTTP 501</em> if this API is called on a cluster coordinator. <br><br>",
                            "code": "501"
                        }
                    ],
                    "parameters": [
                        {
                            "dataType": "String",
                            "paramType": "body",
                            "required": true,
                            "name": "documents",
                            "description": "The body must either be a JSON-encoded array of objects or a string with multiple JSON objects separated by newlines. <br><br>"
                        },
                        {
                            "dataType": "String",
                            "paramType": "query",
                            "required": true,
                            "name": "type",
                            "description": "Determines how the body of the request will be interpreted. <em>type</em> can have the following values:  <ul class=\"swagger-list\"><li><em>documents</em>: when this type is used, each line in the request body is expected to be an individual JSON-encoded document. Multiple JSON objects in the request body need to be separated by newlines. <li><em>list</em>: when this type is used, the request body must contain a single JSON-encoded array of individual objects to import. <li><em>auto</em>: if set, this will automatically determine the body type (either <em>documents</em> or <em>list</em>)."
                        },
                        {
                            "dataType": "String",
                            "paramType": "query",
                            "required": true,
                            "name": "collection",
                            "description": "The collection name. <br><br>"
                        },
                        {
                            "dataType": "Boolean",
                            "paramType": "query",
                            "required": false,
                            "name": "createCollection",
                            "description": "If this parameter has a value of <em>true</em> or <em>yes</em>, then the collection is created if it does not yet exist. Other values will be ignored so the collection must be present for the operation to succeed. <br><br>"
                        },
                        {
                            "dataType": "Boolean",
                            "paramType": "query",
                            "required": false,
                            "name": "overwrite",
                            "description": "If this parameter has a value of <em>true</em> or <em>yes</em>, then all data in the collection will be removed prior to the import. Note that any existing index definitions will be preseved. <br><br>"
                        },
                        {
                            "dataType": "Boolean",
                            "paramType": "query",
                            "required": false,
                            "name": "waitForSync",
                            "description": "Wait until documents have been synced to disk before returning. <br><br>"
                        },
                        {
                            "dataType": "String",
                            "paramType": "query",
                            "required": false,
                            "name": "onDuplicate",
                            "description": "Controls what action is carried out in case of a unique key constraint violation. Possible values are: <br><br>  <ul class=\"swagger-list\"><li><em>error</em>: this will not import the current document because of the unique key constraint violation. This is the default setting.  <li><em>update</em>: this will update an existing document in the database with the  data specified in the request. Attributes of the existing document that are not present in the request will be preseved.  <li><em>replace</em>: this will replace an existing document in the database with the data specified in the request.   <li><em>ignore</em>: this will not update an existing document and simply ignore the error caused by a unique key constraint violation.  </ul> Note that that <em>update</em>, <em>replace</em> and <em>ignore</em> will only work when the import document in the request contains the <em>_key</em> attribute. <em>update</em> and <em>replace</em> may also fail because of secondary unique key constraint violations. <br><br>"
                        },
                        {
                            "dataType": "Boolean",
                            "paramType": "query",
                            "required": false,
                            "name": "complete",
                            "description": "If set to <em>true</em> or <em>yes</em>, it will make the whole import fail if any error occurs. Otherwise the import will continue even if some documents cannot be imported. <br><br>"
                        },
                        {
                            "dataType": "Boolean",
                            "paramType": "query",
                            "required": false,
                            "name": "details",
                            "description": "If set to <em>true</em> or <em>yes</em>, the result will include an attribute <em>details</em> with details about documents that could not be imported. <br><br>"
                        }
                    ],
                    "notes": "Creates documents in the collection identified by <em>collection-name</em>. The JSON representations of the documents must be passed as the body of the POST request. The request body can either consist of multiple lines, with each line being a single stand-alone JSON object, or a singe JSON array with sub-objects. <br><br> The response is a JSON object with the following attributes: <br><br>  <ul class=\"swagger-list\"><li><em>created</em>: number of documents imported.  <li><em>errors</em>: number of documents that were not imported due to an error.  <li><em>empty</em>: number of empty lines found in the input (will only contain a value greater zero for types <em>documents</em> or <em>auto</em>).  <li><em>updated</em>: number of updated/replaced documents (in case <em>onDuplicate</em> was set to either <em>update</em> or <em>replace</em>).  <li><em>ignored</em>: number of failed but ignored insert operations (in case <em>onDuplicate</em> was set to <em>ignore</em>).  <li><em>details</em>: if URL parameter <em>details</em> is set to true, the result will contain a <em>details</em> attribute which is an array with more detailed information about which documents could not be inserted.  </ul> Note: this API is currently not supported on cluster coordinators. <br><br>",
                    "summary": "imports documents from JSON",
                    "httpMethod": "POST",
                    "examples": "<br><br> Importing documents with heterogenous attributes from a JSON array: <br><br><br><br><pre><code class=\"json\">shell&gt; curl -X POST --data-binary @- --dump - http:<span class=\"hljs-comment\">//localhost:8529/_api/import?collection=products&amp;type=list &lt;&lt;EOF</span>\n[{<span class=\"hljs-string\">\"_key\"</span>:<span class=\"hljs-string\">\"abc\"</span>,<span class=\"hljs-string\">\"value1\"</span>:<span class=\"hljs-number\">25</span>,<span class=\"hljs-string\">\"value2\"</span>:<span class=\"hljs-string\">\"test\"</span>,<span class=\"hljs-string\">\"allowed\"</span>:<span class=\"hljs-literal\">true</span>},{<span class=\"hljs-string\">\"_key\"</span>:<span class=\"hljs-string\">\"foo\"</span>,<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-string\">\"baz\"</span>},{<span class=\"hljs-string\">\"name\"</span>:{<span class=\"hljs-string\">\"detailed\"</span>:<span class=\"hljs-string\">\"detailed name\"</span>,<span class=\"hljs-string\">\"short\"</span>:<span class=\"hljs-string\">\"short name\"</span>}}]\nEOF\n\nHTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">201</span> Created\ncontent-type: application/json; charset=utf-<span class=\"hljs-number\">8</span>\n\n{ \n  <span class=\"hljs-string\">\"error\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"created\"</span> : <span class=\"hljs-number\">3</span>, \n  <span class=\"hljs-string\">\"errors\"</span> : <span class=\"hljs-number\">0</span>, \n  <span class=\"hljs-string\">\"empty\"</span> : <span class=\"hljs-number\">0</span>, \n  <span class=\"hljs-string\">\"updated\"</span> : <span class=\"hljs-number\">0</span>, \n  <span class=\"hljs-string\">\"ignored\"</span> : <span class=\"hljs-number\">0</span> \n}\n</code></pre><br><br><br> Importing documents from individual JSON lines: <br><br><br><br><pre><code class=\"json\">shell&gt; curl -X POST --data-binary @- --dump - http:<span class=\"hljs-comment\">//localhost:8529/_api/import?collection=products&amp;type=documents &lt;&lt;EOF</span>\n{ <span class=\"hljs-string\">\"_key\"</span>: <span class=\"hljs-string\">\"abc\"</span>, <span class=\"hljs-string\">\"value1\"</span>: <span class=\"hljs-number\">25</span>, <span class=\"hljs-string\">\"value2\"</span>: <span class=\"hljs-string\">\"test\"</span>, <span class=\"hljs-string\">\"allowed\"</span>: <span class=\"hljs-literal\">true</span> }\n{ <span class=\"hljs-string\">\"_key\"</span>: <span class=\"hljs-string\">\"foo\"</span>, <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"baz\"</span> }\n\n{ <span class=\"hljs-string\">\"name\"</span>: { <span class=\"hljs-string\">\"detailed\"</span>: <span class=\"hljs-string\">\"detailed name\"</span>, <span class=\"hljs-string\">\"short\"</span>: <span class=\"hljs-string\">\"short name\"</span> } }\n\nEOF\n\nHTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">201</span> Created\ncontent-type: application/json; charset=utf-<span class=\"hljs-number\">8</span>\n\n{ \n  <span class=\"hljs-string\">\"error\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"created\"</span> : <span class=\"hljs-number\">3</span>, \n  <span class=\"hljs-string\">\"errors\"</span> : <span class=\"hljs-number\">0</span>, \n  <span class=\"hljs-string\">\"empty\"</span> : <span class=\"hljs-number\">1</span>, \n  <span class=\"hljs-string\">\"updated\"</span> : <span class=\"hljs-number\">0</span>, \n  <span class=\"hljs-string\">\"ignored\"</span> : <span class=\"hljs-number\">0</span> \n}\n</code></pre><br><br><br> Using the auto type detection: <br><br><br><br><pre><code class=\"json\">shell&gt; curl -X POST --data-binary @- --dump - http:<span class=\"hljs-comment\">//localhost:8529/_api/import?collection=products&amp;type=auto &lt;&lt;EOF</span>\n[{<span class=\"hljs-string\">\"_key\"</span>:<span class=\"hljs-string\">\"abc\"</span>,<span class=\"hljs-string\">\"value1\"</span>:<span class=\"hljs-number\">25</span>,<span class=\"hljs-string\">\"value2\"</span>:<span class=\"hljs-string\">\"test\"</span>,<span class=\"hljs-string\">\"allowed\"</span>:<span class=\"hljs-literal\">true</span>},{<span class=\"hljs-string\">\"_key\"</span>:<span class=\"hljs-string\">\"foo\"</span>,<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-string\">\"baz\"</span>},{<span class=\"hljs-string\">\"name\"</span>:{<span class=\"hljs-string\">\"detailed\"</span>:<span class=\"hljs-string\">\"detailed name\"</span>,<span class=\"hljs-string\">\"short\"</span>:<span class=\"hljs-string\">\"short name\"</span>}}]\nEOF\n\nHTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">201</span> Created\ncontent-type: application/json; charset=utf-<span class=\"hljs-number\">8</span>\n\n{ \n  <span class=\"hljs-string\">\"error\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"created\"</span> : <span class=\"hljs-number\">3</span>, \n  <span class=\"hljs-string\">\"errors\"</span> : <span class=\"hljs-number\">0</span>, \n  <span class=\"hljs-string\">\"empty\"</span> : <span class=\"hljs-number\">0</span>, \n  <span class=\"hljs-string\">\"updated\"</span> : <span class=\"hljs-number\">0</span>, \n  <span class=\"hljs-string\">\"ignored\"</span> : <span class=\"hljs-number\">0</span> \n}\n</code></pre><br><br><br> Importing documents into a new collection from a JSON array: <br><br><br><br><pre><code class=\"json\">shell&gt; curl -X POST --data-binary @- --dump - http:<span class=\"hljs-comment\">//localhost:8529/_api/import?collection=products&amp;createCollection=true&amp;type=list &lt;&lt;EOF</span>\n[{<span class=\"hljs-string\">\"id\"</span>:<span class=\"hljs-string\">\"12553\"</span>,<span class=\"hljs-string\">\"active\"</span>:<span class=\"hljs-literal\">true</span>},{<span class=\"hljs-string\">\"id\"</span>:<span class=\"hljs-string\">\"4433\"</span>,<span class=\"hljs-string\">\"active\"</span>:<span class=\"hljs-literal\">false</span>},{<span class=\"hljs-string\">\"id\"</span>:<span class=\"hljs-string\">\"55932\"</span>,<span class=\"hljs-string\">\"count\"</span>:<span class=\"hljs-number\">4334</span>}]\nEOF\n\nHTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">201</span> Created\ncontent-type: application/json; charset=utf-<span class=\"hljs-number\">8</span>\n\n{ \n  <span class=\"hljs-string\">\"error\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"created\"</span> : <span class=\"hljs-number\">3</span>, \n  <span class=\"hljs-string\">\"errors\"</span> : <span class=\"hljs-number\">0</span>, \n  <span class=\"hljs-string\">\"empty\"</span> : <span class=\"hljs-number\">0</span>, \n  <span class=\"hljs-string\">\"updated\"</span> : <span class=\"hljs-number\">0</span>, \n  <span class=\"hljs-string\">\"ignored\"</span> : <span class=\"hljs-number\">0</span> \n}\n</code></pre><br><br><br> Importing into an edge collection, with attributes <em>_from</em>, <em>_to</em> and <em>name</em>: <br><br><br><br><pre><code class=\"json\">shell&gt; curl -X POST --data-binary @- --dump - http:<span class=\"hljs-comment\">//localhost:8529/_api/import?collection=links&amp;type=documents &lt;&lt;EOF</span>\n{ <span class=\"hljs-string\">\"_from\"</span>: <span class=\"hljs-string\">\"products/123\"</span>, <span class=\"hljs-string\">\"_to\"</span>: <span class=\"hljs-string\">\"products/234\"</span> }\n{ <span class=\"hljs-string\">\"_from\"</span>: <span class=\"hljs-string\">\"products/332\"</span>, <span class=\"hljs-string\">\"_to\"</span>: <span class=\"hljs-string\">\"products/abc\"</span>, <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"other name\"</span> }\nEOF\n\nHTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">201</span> Created\ncontent-type: application/json; charset=utf-<span class=\"hljs-number\">8</span>\n\n{ \n  <span class=\"hljs-string\">\"error\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"created\"</span> : <span class=\"hljs-number\">2</span>, \n  <span class=\"hljs-string\">\"errors\"</span> : <span class=\"hljs-number\">0</span>, \n  <span class=\"hljs-string\">\"empty\"</span> : <span class=\"hljs-number\">0</span>, \n  <span class=\"hljs-string\">\"updated\"</span> : <span class=\"hljs-number\">0</span>, \n  <span class=\"hljs-string\">\"ignored\"</span> : <span class=\"hljs-number\">0</span> \n}\n</code></pre><br><br><br> Importing into an edge collection, omitting <em>_from</em> or <em>_to</em>: <br><br><br><br><pre><code class=\"json\">shell&gt; curl -X POST --data-binary @- --dump - http:<span class=\"hljs-comment\">//localhost:8529/_api/import?collection=links&amp;type=list&amp;details=true &lt;&lt;EOF</span>\n[{<span class=\"hljs-string\">\"name\"</span>:<span class=\"hljs-string\">\"some name\"</span>}]\nEOF\n\nHTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">201</span> Created\ncontent-type: application/json; charset=utf-<span class=\"hljs-number\">8</span>\n\n{ \n  <span class=\"hljs-string\">\"error\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"created\"</span> : <span class=\"hljs-number\">0</span>, \n  <span class=\"hljs-string\">\"errors\"</span> : <span class=\"hljs-number\">1</span>, \n  <span class=\"hljs-string\">\"empty\"</span> : <span class=\"hljs-number\">0</span>, \n  <span class=\"hljs-string\">\"updated\"</span> : <span class=\"hljs-number\">0</span>, \n  <span class=\"hljs-string\">\"ignored\"</span> : <span class=\"hljs-number\">0</span>, \n  <span class=\"hljs-string\">\"details\"</span> : [ \n    <span class=\"hljs-string\">\"at position 1: missing '_from' or '_to' attribute, offending document: {\\\"name\\\":\\\"some name\\\"}\"</span> \n  ] \n}\n</code></pre><br><br><br> Violating a unique constraint, but allow partial imports: <br><br><br><br><pre><code class=\"json\">shell&gt; curl -X POST --data-binary @- --dump - http:<span class=\"hljs-comment\">//localhost:8529/_api/import?collection=products&amp;type=documents&amp;details=true &lt;&lt;EOF</span>\n{ <span class=\"hljs-string\">\"_key\"</span>: <span class=\"hljs-string\">\"abc\"</span>, <span class=\"hljs-string\">\"value1\"</span>: <span class=\"hljs-number\">25</span>, <span class=\"hljs-string\">\"value2\"</span>: <span class=\"hljs-string\">\"test\"</span> }\n{ <span class=\"hljs-string\">\"_key\"</span>: <span class=\"hljs-string\">\"abc\"</span>, <span class=\"hljs-string\">\"value1\"</span>: <span class=\"hljs-string\">\"bar\"</span>, <span class=\"hljs-string\">\"value2\"</span>: <span class=\"hljs-string\">\"baz\"</span> }\nEOF\n\nHTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">201</span> Created\ncontent-type: application/json; charset=utf-<span class=\"hljs-number\">8</span>\n\n{ \n  <span class=\"hljs-string\">\"error\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"created\"</span> : <span class=\"hljs-number\">1</span>, \n  <span class=\"hljs-string\">\"errors\"</span> : <span class=\"hljs-number\">1</span>, \n  <span class=\"hljs-string\">\"empty\"</span> : <span class=\"hljs-number\">0</span>, \n  <span class=\"hljs-string\">\"updated\"</span> : <span class=\"hljs-number\">0</span>, \n  <span class=\"hljs-string\">\"ignored\"</span> : <span class=\"hljs-number\">0</span>, \n  <span class=\"hljs-string\">\"details\"</span> : [ \n    <span class=\"hljs-string\">\"at position 2: creating document failed with error 'unique constraint violated', offending document: {\\\"_key\\\":\\\"abc\\\",\\\"value1\\\":\\\"bar\\\",\\\"value2\\\":\\\"baz\\\"}\"</span> \n  ] \n}\n</code></pre><br><br><br> Violating a unique constraint, not allowing partial imports: <br><br><br><br><pre><code class=\"json\">shell&gt; curl -X POST --data-binary @- --dump - http:<span class=\"hljs-comment\">//localhost:8529/_api/import?collection=products&amp;type=documents&amp;complete=true &lt;&lt;EOF</span>\n{ <span class=\"hljs-string\">\"_key\"</span>: <span class=\"hljs-string\">\"abc\"</span>, <span class=\"hljs-string\">\"value1\"</span>: <span class=\"hljs-number\">25</span>, <span class=\"hljs-string\">\"value2\"</span>: <span class=\"hljs-string\">\"test\"</span> }\n{ <span class=\"hljs-string\">\"_key\"</span>: <span class=\"hljs-string\">\"abc\"</span>, <span class=\"hljs-string\">\"value1\"</span>: <span class=\"hljs-string\">\"bar\"</span>, <span class=\"hljs-string\">\"value2\"</span>: <span class=\"hljs-string\">\"baz\"</span> }\nEOF\n\nHTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">409</span> Conflict\ncontent-type: application/json; charset=utf-<span class=\"hljs-number\">8</span>\n\n{ \n  <span class=\"hljs-string\">\"error\"</span> : <span class=\"hljs-literal\">true</span>, \n  <span class=\"hljs-string\">\"errorMessage\"</span> : <span class=\"hljs-string\">\"cannot create document, unique constraint violated\"</span>, \n  <span class=\"hljs-string\">\"code\"</span> : <span class=\"hljs-number\">409</span>, \n  <span class=\"hljs-string\">\"errorNum\"</span> : <span class=\"hljs-number\">1210</span> \n}\n</code></pre><br><br><br> Using a non-existing collection: <br><br><br><br><pre><code class=\"json\">shell&gt; curl -X POST --data-binary @- --dump - http:<span class=\"hljs-comment\">//localhost:8529/_api/import?collection=products&amp;type=documents &lt;&lt;EOF</span>\n{ <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"test\"</span> }\nEOF\n\nHTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">404</span> Not Found\ncontent-type: application/json; charset=utf-<span class=\"hljs-number\">8</span>\n\n{ \n  <span class=\"hljs-string\">\"error\"</span> : <span class=\"hljs-literal\">true</span>, \n  <span class=\"hljs-string\">\"errorMessage\"</span> : <span class=\"hljs-string\">\"collection 'products' not found\"</span>, \n  <span class=\"hljs-string\">\"code\"</span> : <span class=\"hljs-number\">404</span>, \n  <span class=\"hljs-string\">\"errorNum\"</span> : <span class=\"hljs-number\">1203</span> \n}\n</code></pre><br><br><br> Using a malformed body: <br><br><br><br><pre><code class=\"json\">shell&gt; curl -X POST --data-binary @- --dump - http:<span class=\"hljs-comment\">//localhost:8529/_api/import?collection=products&amp;type=list &lt;&lt;EOF</span>\n{ }\nEOF\n\nHTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">400</span> Bad Request\ncontent-type: application/json; charset=utf-<span class=\"hljs-number\">8</span>\n\n{ \n  <span class=\"hljs-string\">\"error\"</span> : <span class=\"hljs-literal\">true</span>, \n  <span class=\"hljs-string\">\"errorMessage\"</span> : <span class=\"hljs-string\">\"expecting a JSON array in the request\"</span>, \n  <span class=\"hljs-string\">\"code\"</span> : <span class=\"hljs-number\">400</span>, \n  <span class=\"hljs-string\">\"errorNum\"</span> : <span class=\"hljs-number\">400</span> \n}\n</code></pre><br>",
                    "nickname": "importsDocumentsFromJson"
                }
            ],
            "path": "/_api/import"
        },
        {
            "operations": [
                {
                    "errorResponses": [
                        {
                            "reason": "is returned if all documents could be imported successfully. <br><br>",
                            "code": "201"
                        },
                        {
                            "reason": "is returned if <em>type</em> contains an invalid value, no <em>collection</em> is specified, the documents are incorrectly encoded, or the request is malformed. <br><br>",
                            "code": "400"
                        },
                        {
                            "reason": "is returned if <em>collection</em> or the <em>_from</em> or <em>_to</em> attributes of an imported edge refer to an unknown collection. <br><br>",
                            "code": "404"
                        },
                        {
                            "reason": "is returned if the import would trigger a unique key violation and <em>complete</em> is set to <em>true</em>. <br><br>",
                            "code": "409"
                        },
                        {
                            "reason": "is returned if the server cannot auto-generate a document key (out of keys error) for a document with no user-defined key. <br><br>",
                            "code": "500"
                        },
                        {
                            "reason": "The server will respond with <em>HTTP 501</em> if this API is called on a cluster coordinator. <br><br>",
                            "code": "501"
                        }
                    ],
                    "parameters": [
                        {
                            "dataType": "String",
                            "paramType": "body",
                            "required": true,
                            "name": "documents",
                            "description": "The body must consist of JSON-encoded arrays of attribute values, with one line per document. The first row of the request must be a JSON-encoded array of attribute names. These attribute names are used for the data in the subsequent lines. <br><br>"
                        },
                        {
                            "dataType": "String",
                            "paramType": "query",
                            "required": true,
                            "name": "collection",
                            "description": "The collection name. <br><br>"
                        },
                        {
                            "dataType": "Boolean",
                            "paramType": "query",
                            "required": false,
                            "name": "createCollection",
                            "description": "If this parameter has a value of <em>true</em> or <em>yes</em>, then the collection is created if it does not yet exist. Other values will be ignored so the collection must be present for the operation to succeed. <br><br>"
                        },
                        {
                            "dataType": "Boolean",
                            "paramType": "query",
                            "required": false,
                            "name": "overwrite",
                            "description": "If this parameter has a value of <em>true</em> or <em>yes</em>, then all data in the collection will be removed prior to the import. Note that any existing index definitions will be preseved. <br><br>"
                        },
                        {
                            "dataType": "Boolean",
                            "paramType": "query",
                            "required": false,
                            "name": "waitForSync",
                            "description": "Wait until documents have been synced to disk before returning. <br><br>"
                        },
                        {
                            "dataType": "String",
                            "paramType": "query",
                            "required": false,
                            "name": "onDuplicate",
                            "description": "Controls what action is carried out in case of a unique key constraint violation. Possible values are: <br><br>  <ul class=\"swagger-list\"><li><em>error</em>: this will not import the current document because of the unique key constraint violation. This is the default setting.  <li><em>update</em>: this will update an existing document in the database with the  data specified in the request. Attributes of the existing document that are not present in the request will be preseved.  <li><em>replace</em>: this will replace an existing document in the database with the data specified in the request.   <li><em>ignore</em>: this will not update an existing document and simply ignore the error caused by the unique key constraint violation.  </ul> Note that <em>update</em>, <em>replace</em> and <em>ignore</em> will only work when the import document in the request contains the <em>_key</em> attribute. <em>update</em> and <em>replace</em> may also fail because of secondary unique key constraint violations. <br><br>"
                        },
                        {
                            "dataType": "Boolean",
                            "paramType": "query",
                            "required": false,
                            "name": "complete",
                            "description": "If set to <em>true</em> or <em>yes</em>, it will make the whole import fail if any error occurs. Otherwise the import will continue even if some documents cannot be imported. <br><br>"
                        },
                        {
                            "dataType": "Boolean",
                            "paramType": "query",
                            "required": false,
                            "name": "details",
                            "description": "If set to <em>true</em> or <em>yes</em>, the result will include an attribute <em>details</em> with details about documents that could not be imported. <br><br>"
                        }
                    ],
                    "notes": "Creates documents in the collection identified by <em>collection-name</em>. The first line of the request body must contain a JSON-encoded array of attribute names. All following lines in the request body must contain JSON-encoded arrays of attribute values. Each line is interpreted as a separate document, and the values specified will be mapped to the array of attribute names specified in the first header line. <br><br> The response is a JSON object with the following attributes: <br><br>  <ul class=\"swagger-list\"><li><em>created</em>: number of documents imported.  <li><em>errors</em>: number of documents that were not imported due to an error.  <li><em>empty</em>: number of empty lines found in the input (will only contain a value greater zero for types <em>documents</em> or <em>auto</em>).  <li><em>updated</em>: number of updated/replaced documents (in case <em>onDuplicate</em> was set to either <em>update</em> or <em>replace</em>).  <li><em>ignored</em>: number of failed but ignored insert operations (in case <em>onDuplicate</em> was set to <em>ignore</em>).  <li><em>details</em>: if URL parameter <em>details</em> is set to true, the result will contain a <em>details</em> attribute which is an array with more detailed information about which documents could not be inserted.  </ul> Note: this API is currently not supported on cluster coordinators. <br><br>",
                    "summary": "imports document values",
                    "httpMethod": "POST",
                    "examples": "<br><br> Importing two documents, with attributes <em>_key</em>, <em>value1</em> and <em>value2</em> each. One line in the import data is empty: <br><br><br><br><pre><code class=\"json\">shell&gt; curl -X POST --data-binary @- --dump - http:<span class=\"hljs-comment\">//localhost:8529/_api/import?collection=products &lt;&lt;EOF</span>\n[ <span class=\"hljs-string\">\"_key\"</span>, <span class=\"hljs-string\">\"value1\"</span>, <span class=\"hljs-string\">\"value2\"</span> ]\n[ <span class=\"hljs-string\">\"abc\"</span>, <span class=\"hljs-number\">25</span>, <span class=\"hljs-string\">\"test\"</span> ]\n\n[ <span class=\"hljs-string\">\"foo\"</span>, <span class=\"hljs-string\">\"bar\"</span>, <span class=\"hljs-string\">\"baz\"</span> ]\nEOF\n\nHTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">201</span> Created\ncontent-type: application/json; charset=utf-<span class=\"hljs-number\">8</span>\n\n{ \n  <span class=\"hljs-string\">\"error\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"created\"</span> : <span class=\"hljs-number\">2</span>, \n  <span class=\"hljs-string\">\"errors\"</span> : <span class=\"hljs-number\">0</span>, \n  <span class=\"hljs-string\">\"empty\"</span> : <span class=\"hljs-number\">1</span>, \n  <span class=\"hljs-string\">\"updated\"</span> : <span class=\"hljs-number\">0</span>, \n  <span class=\"hljs-string\">\"ignored\"</span> : <span class=\"hljs-number\">0</span> \n}\n</code></pre><br><br><br> Importing two documents into a new collection: <br><br><br><br><pre><code class=\"json\">shell&gt; curl -X POST --data-binary @- --dump - http:<span class=\"hljs-comment\">//localhost:8529/_api/import?collection=products&amp;createCollection=true &lt;&lt;EOF</span>\n[ <span class=\"hljs-string\">\"value1\"</span>, <span class=\"hljs-string\">\"value2\"</span> ]\n[ <span class=\"hljs-number\">1234</span>, <span class=\"hljs-literal\">null</span> ]\n[ <span class=\"hljs-string\">\"foo\"</span>, <span class=\"hljs-string\">\"bar\"</span> ]\n[ <span class=\"hljs-number\">534.55</span>, <span class=\"hljs-literal\">true</span> ]\nEOF\n\nHTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">201</span> Created\ncontent-type: application/json; charset=utf-<span class=\"hljs-number\">8</span>\n\n{ \n  <span class=\"hljs-string\">\"error\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"created\"</span> : <span class=\"hljs-number\">3</span>, \n  <span class=\"hljs-string\">\"errors\"</span> : <span class=\"hljs-number\">0</span>, \n  <span class=\"hljs-string\">\"empty\"</span> : <span class=\"hljs-number\">0</span>, \n  <span class=\"hljs-string\">\"updated\"</span> : <span class=\"hljs-number\">0</span>, \n  <span class=\"hljs-string\">\"ignored\"</span> : <span class=\"hljs-number\">0</span> \n}\n</code></pre><br><br><br> Importing into an edge collection, with attributes <em>_from</em>, <em>_to</em> and <em>name</em>: <br><br><br><br><pre><code class=\"json\">shell&gt; curl -X POST --data-binary @- --dump - http:<span class=\"hljs-comment\">//localhost:8529/_api/import?collection=links &lt;&lt;EOF</span>\n[ <span class=\"hljs-string\">\"_from\"</span>, <span class=\"hljs-string\">\"_to\"</span>, <span class=\"hljs-string\">\"name\"</span> ]\n[ <span class=\"hljs-string\">\"products/123\"</span>, <span class=\"hljs-string\">\"products/234\"</span>, <span class=\"hljs-string\">\"some name\"</span> ]\n[ <span class=\"hljs-string\">\"products/332\"</span>, <span class=\"hljs-string\">\"products/abc\"</span>, <span class=\"hljs-string\">\"other name\"</span> ]\nEOF\n\nHTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">201</span> Created\ncontent-type: application/json; charset=utf-<span class=\"hljs-number\">8</span>\n\n{ \n  <span class=\"hljs-string\">\"error\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"created\"</span> : <span class=\"hljs-number\">2</span>, \n  <span class=\"hljs-string\">\"errors\"</span> : <span class=\"hljs-number\">0</span>, \n  <span class=\"hljs-string\">\"empty\"</span> : <span class=\"hljs-number\">0</span>, \n  <span class=\"hljs-string\">\"updated\"</span> : <span class=\"hljs-number\">0</span>, \n  <span class=\"hljs-string\">\"ignored\"</span> : <span class=\"hljs-number\">0</span> \n}\n</code></pre><br><br><br> Importing into an edge collection, omitting <em>_from</em> or <em>_to</em>: <br><br><br><br><pre><code class=\"json\">shell&gt; curl -X POST --data-binary @- --dump - http:<span class=\"hljs-comment\">//localhost:8529/_api/import?collection=links&amp;details=true &lt;&lt;EOF</span>\n[ <span class=\"hljs-string\">\"name\"</span> ]\n[ <span class=\"hljs-string\">\"some name\"</span> ]\n[ <span class=\"hljs-string\">\"other name\"</span> ]\nEOF\n\nHTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">201</span> Created\ncontent-type: application/json; charset=utf-<span class=\"hljs-number\">8</span>\n\n{ \n  <span class=\"hljs-string\">\"error\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"created\"</span> : <span class=\"hljs-number\">0</span>, \n  <span class=\"hljs-string\">\"errors\"</span> : <span class=\"hljs-number\">2</span>, \n  <span class=\"hljs-string\">\"empty\"</span> : <span class=\"hljs-number\">0</span>, \n  <span class=\"hljs-string\">\"updated\"</span> : <span class=\"hljs-number\">0</span>, \n  <span class=\"hljs-string\">\"ignored\"</span> : <span class=\"hljs-number\">0</span>, \n  <span class=\"hljs-string\">\"details\"</span> : [ \n    <span class=\"hljs-string\">\"at position 1: missing '_from' or '_to' attribute, offending document: {\\\"name\\\":\\\"some name\\\"}\"</span>, \n    <span class=\"hljs-string\">\"at position 2: missing '_from' or '_to' attribute, offending document: {\\\"name\\\":\\\"other name\\\"}\"</span> \n  ] \n}\n</code></pre><br><br><br> Violating a unique constraint, but allow partial imports: <br><br><br><br><pre><code class=\"json\">shell&gt; curl -X POST --data-binary @- --dump - http:<span class=\"hljs-comment\">//localhost:8529/_api/import?collection=products&amp;details=true &lt;&lt;EOF</span>\n[ <span class=\"hljs-string\">\"_key\"</span>, <span class=\"hljs-string\">\"value1\"</span>, <span class=\"hljs-string\">\"value2\"</span> ]\n[ <span class=\"hljs-string\">\"abc\"</span>, <span class=\"hljs-number\">25</span>, <span class=\"hljs-string\">\"test\"</span> ]\n[ <span class=\"hljs-string\">\"abc\"</span>, <span class=\"hljs-string\">\"bar\"</span>, <span class=\"hljs-string\">\"baz\"</span> ]\nEOF\n\nHTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">201</span> Created\ncontent-type: application/json; charset=utf-<span class=\"hljs-number\">8</span>\n\n{ \n  <span class=\"hljs-string\">\"error\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"created\"</span> : <span class=\"hljs-number\">1</span>, \n  <span class=\"hljs-string\">\"errors\"</span> : <span class=\"hljs-number\">1</span>, \n  <span class=\"hljs-string\">\"empty\"</span> : <span class=\"hljs-number\">0</span>, \n  <span class=\"hljs-string\">\"updated\"</span> : <span class=\"hljs-number\">0</span>, \n  <span class=\"hljs-string\">\"ignored\"</span> : <span class=\"hljs-number\">0</span>, \n  <span class=\"hljs-string\">\"details\"</span> : [ \n    <span class=\"hljs-string\">\"at position 2: creating document failed with error 'unique constraint violated', offending document: {\\\"_key\\\":\\\"abc\\\",\\\"value1\\\":\\\"bar\\\",\\\"value2\\\":\\\"baz\\\"}\"</span> \n  ] \n}\n</code></pre><br><br><br> Violating a unique constraint, not allowing partial imports: <br><br><br><br><pre><code class=\"json\">shell&gt; curl -X POST --data-binary @- --dump - http:<span class=\"hljs-comment\">//localhost:8529/_api/import?collection=products&amp;complete=true &lt;&lt;EOF</span>\n[ <span class=\"hljs-string\">\"_key\"</span>, <span class=\"hljs-string\">\"value1\"</span>, <span class=\"hljs-string\">\"value2\"</span> ]\n[ <span class=\"hljs-string\">\"abc\"</span>, <span class=\"hljs-number\">25</span>, <span class=\"hljs-string\">\"test\"</span> ]\n[ <span class=\"hljs-string\">\"abc\"</span>, <span class=\"hljs-string\">\"bar\"</span>, <span class=\"hljs-string\">\"baz\"</span> ]\nEOF\n\nHTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">409</span> Conflict\ncontent-type: application/json; charset=utf-<span class=\"hljs-number\">8</span>\n\n{ \n  <span class=\"hljs-string\">\"error\"</span> : <span class=\"hljs-literal\">true</span>, \n  <span class=\"hljs-string\">\"errorMessage\"</span> : <span class=\"hljs-string\">\"cannot create document, unique constraint violated\"</span>, \n  <span class=\"hljs-string\">\"code\"</span> : <span class=\"hljs-number\">409</span>, \n  <span class=\"hljs-string\">\"errorNum\"</span> : <span class=\"hljs-number\">1210</span> \n}\n</code></pre><br><br><br> Using a non-existing collection: <br><br><br><br><pre><code class=\"json\">shell&gt; curl -X POST --data-binary @- --dump - http:<span class=\"hljs-comment\">//localhost:8529/_api/import?collection=products &lt;&lt;EOF</span>\n[ <span class=\"hljs-string\">\"_key\"</span>, <span class=\"hljs-string\">\"value1\"</span>, <span class=\"hljs-string\">\"value2\"</span> ]\n[ <span class=\"hljs-string\">\"abc\"</span>, <span class=\"hljs-number\">25</span>, <span class=\"hljs-string\">\"test\"</span> ]\n[ <span class=\"hljs-string\">\"foo\"</span>, <span class=\"hljs-string\">\"bar\"</span>, <span class=\"hljs-string\">\"baz\"</span> ]\nEOF\n\nHTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">404</span> Not Found\ncontent-type: application/json; charset=utf-<span class=\"hljs-number\">8</span>\n\n{ \n  <span class=\"hljs-string\">\"error\"</span> : <span class=\"hljs-literal\">true</span>, \n  <span class=\"hljs-string\">\"errorMessage\"</span> : <span class=\"hljs-string\">\"collection 'products' not found\"</span>, \n  <span class=\"hljs-string\">\"code\"</span> : <span class=\"hljs-number\">404</span>, \n  <span class=\"hljs-string\">\"errorNum\"</span> : <span class=\"hljs-number\">1203</span> \n}\n</code></pre><br><br><br> Using a malformed body: <br><br><br><br><pre><code class=\"json\">shell&gt; curl -X POST --data-binary @- --dump - http:<span class=\"hljs-comment\">//localhost:8529/_api/import?collection=products &lt;&lt;EOF</span>\n{ <span class=\"hljs-string\">\"_key\"</span>: <span class=\"hljs-string\">\"foo\"</span>, <span class=\"hljs-string\">\"value1\"</span>: <span class=\"hljs-string\">\"bar\"</span> }\nEOF\n\nHTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">400</span> Bad Request\ncontent-type: application/json; charset=utf-<span class=\"hljs-number\">8</span>\n\n{ \n  <span class=\"hljs-string\">\"error\"</span> : <span class=\"hljs-literal\">true</span>, \n  <span class=\"hljs-string\">\"errorMessage\"</span> : <span class=\"hljs-string\">\"no JSON array found in second line\"</span>, \n  <span class=\"hljs-string\">\"code\"</span> : <span class=\"hljs-number\">400</span>, \n  <span class=\"hljs-string\">\"errorNum\"</span> : <span class=\"hljs-number\">400</span> \n}\n</code></pre><br>",
                    "nickname": "importsDocumentValues"
                }
            ],
            "path": "/_api/import"
        }
    ]
}
