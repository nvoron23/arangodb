{
    "basePath": "/",
    "swaggerVersion": "1.1",
    "apiVersion": "0.1",
    "apis": [
        {
            "operations": [
                {
                    "errorResponses": [],
                    "parameters": [
                        {
                            "dataType": "Json",
                            "paramType": "body",
                            "required": true,
                            "name": "body",
                            "description": "the body with name and options for a collection. <br><br>"
                        }
                    ],
                    "notes": "Creates an new collection with a given name. The request must contain an object with the following attributes. <br><br>  <ul class=\"swagger-list\"><li><em>name</em>: The name of the collection.  <li><em>waitForSync</em> (optional, default: false): If <em>true</em> then the data is synchronised to disk before returning from a document create, update, replace or removal operation.  <li><em>doCompact</em> (optional, default is <em>true</em>): whether or not the collection will be compacted.  <li><em>journalSize</em> (optional, default is a configuration parameter): The  maximal size of a journal or datafile in bytes. The value  must be at least <em>1048576</em> (1 MiB).  <li><em>isSystem</em> (optional, default is <em>false</em>): If <em>true</em>, create a system collection. In this case <em>collection-name</em> should start with an underscore. End users should normally create non-system collections only. API implementors may be required to create system collections in very special occasions, but normally a regular collection will do.  <li><em>isVolatile</em> (optional, default is <em>false</em>): If <em>true</em> then the collection data is kept in-memory only and not made persistent. Unloading the collection will cause the collection data to be discarded. Stopping or re-starting the server will also cause full loss of data in the collection. Setting this option will make the resulting collection be slightly faster than regular collections because ArangoDB does not enforce any synchronisation to disk and does not calculate any CRC checksums for datafiles (as there are no datafiles). This option  should threrefore be used for cache-type collections only, and not  for data that cannot be re-created otherwise.  <li><em>keyOptions</em> (optional) additional options for key generation. If specified, then <em>keyOptions</em> should be a JSON array containing the following attributes (note: some of them are optional): - <em>type</em>: specifies the type of the key generator. The currently   available generators are <em>traditional</em> and <em>autoincrement</em>. - <em>allowUserKeys</em>: if set to <em>true</em>, then it is allowed to supply   own key values in the <em>_key</em> attribute of a document. If set to   <em>false</em>, then the key generator will solely be responsible for   generating keys and supplying own key values in the <em>_key</em> attribute   of documents is considered an error. - <em>increment</em>: increment value for <em>autoincrement</em> key generator.   Not used for other key generator types. - <em>offset</em>: initial offset value for <em>autoincrement</em> key generator.   Not used for other key generator types.  <li><em>type</em> (optional, default is <em>2</em>): the type of the collection to create. The following values for <em>type</em> are valid: - <em>2</em>: document collection - <em>3</em>: edges collection  <li><em>numberOfShards</em> (optional, default is <em>1</em>): in a cluster, this value determines the number of shards to create for the collection. In a single server setup, this option is meaningless.  <li><em>shardKeys</em> (optional, default is <em>[ \"_key\" ]</em>): in a cluster, this attribute determines which document attributes are used to determine the target shard for documents. Documents are sent to shards based on the values of their shard key attributes. The values of all shard key attributes in a document are hashed, and the hash value is used to determine the target shard. </ul> <em>Note</em>: Values of shard key attributes cannot be changed once set.   This option is meaningless in a single server setup.",
                    "summary": " Create collection",
                    "httpMethod": "POST",
                    "examples": "<br><br><br><br><pre><code class=\"json\">shell&gt; curl -X POST --data-binary @- --dump - http://localhost:8529/_api/collection &lt;&lt;EOF\n{\"name\":\"testCollectionBasics\"}\nEOF\n\nHTTP/1.1 200 OK\ncontent-type: application/json; charset=utf-8\nlocation: /_db/_system/_api/collection/testCollectionBasics\n\n{ \n  \"id\" : \"1528616315\", \n  \"name\" : \"testCollectionBasics\", \n  \"waitForSync\" : false, \n  \"isVolatile\" : false, \n  \"isSystem\" : false, \n  \"status\" : 3, \n  \"type\" : 2, \n  \"error\" : false, \n  \"code\" : 200 \n}\nshell&gt; curl -X POST --data-binary @- --dump - http://localhost:8529/_api/collection &lt;&lt;EOF\n{\"name\":\"testCollectionEdges\",\"type\":3}\nEOF\n\nHTTP/1.1 200 OK\ncontent-type: application/json; charset=utf-8\nlocation: /_db/_system/_api/collection/testCollectionEdges\n\n{ \n  \"id\" : \"1528747387\", \n  \"name\" : \"testCollectionEdges\", \n  \"waitForSync\" : false, \n  \"isVolatile\" : false, \n  \"isSystem\" : false, \n  \"status\" : 3, \n  \"type\" : 3, \n  \"error\" : false, \n  \"code\" : 200 \n}\n</code></pre><br><br><br><br><br><pre><code class=\"json\">shell&gt; curl -X POST --data-binary @- --dump - http://localhost:8529/_api/collection &lt;&lt;EOF\n{\"name\":\"testCollectionUsers\",\"keyOptions\":{\"type\":\"autoincrement\",\"increment\":5,\"allowUserKeys\":true}}\nEOF\n\nHTTP/1.1 200 OK\ncontent-type: application/json; charset=utf-8\nlocation: /_db/_system/_api/collection/testCollectionUsers\n\n{ \n  \"id\" : \"1529009531\", \n  \"name\" : \"testCollectionUsers\", \n  \"waitForSync\" : false, \n  \"isVolatile\" : false, \n  \"isSystem\" : false, \n  \"status\" : 3, \n  \"type\" : 2, \n  \"error\" : false, \n  \"code\" : 200 \n}\n</code></pre><br><br><br>",
                    "nickname": "CreateCollection"
                }
            ],
            "path": "/_api/collection"
        },
        {
            "operations": [
                {
                    "errorResponses": [],
                    "parameters": [
                        {
                            "dataType": "Boolean",
                            "paramType": "query",
                            "required": false,
                            "name": "excludeSystem",
                            "description": "Whether or not system collections should be excluded from the result. <br><br>"
                        }
                    ],
                    "notes": "Returns an object with an attribute <em>collections</em> containing an array of all collection descriptions. The same information is also available in the <em>names</em> as an object with the collection names as keys. <br><br> By providing the optional URL parameter <em>excludeSystem</em> with a value of <em>true</em>, all system collections will be excluded from the response. <br><br>",
                    "summary": "reads all collections",
                    "httpMethod": "GET",
                    "examples": "<br><br> Return information about all collections: <br><br><br><br><pre><code class=\"json\">shell&gt; curl --dump - http://localhost:8529/_api/collection\n\nHTTP/1.1 200 OK\ncontent-type: application/json; charset=utf-8\n\n{ \n  \"collections\" : [ \n    { \n      \"id\" : \"5756283\", \n      \"name\" : \"_configuration\", \n      \"isSystem\" : true, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    { \n      \"id\" : \"2348411\", \n      \"name\" : \"_routing\", \n      \"isSystem\" : true, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    { \n      \"id\" : \"4576635\", \n      \"name\" : \"_statisticsRaw\", \n      \"isSystem\" : true, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    { \n      \"id\" : \"2217339\", \n      \"name\" : \"_modules\", \n      \"isSystem\" : true, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    { \n      \"id\" : \"4445563\", \n      \"name\" : \"_aqlfunctions\", \n      \"isSystem\" : true, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    { \n      \"id\" : \"4969851\", \n      \"name\" : \"_statistics\", \n      \"isSystem\" : true, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    { \n      \"id\" : \"7198075\", \n      \"name\" : \"_apps\", \n      \"isSystem\" : true, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    { \n      \"id\" : \"6346107\", \n      \"name\" : \"_jobs\", \n      \"isSystem\" : true, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    { \n      \"id\" : \"15586683\", \n      \"name\" : \"_sessions\", \n      \"isSystem\" : true, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    { \n      \"id\" : \"1257428347\", \n      \"name\" : \"demo\", \n      \"isSystem\" : false, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    { \n      \"id\" : \"2086267\", \n      \"name\" : \"_graphs\", \n      \"isSystem\" : true, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    { \n      \"id\" : \"16307579\", \n      \"name\" : \"_system_users_users\", \n      \"isSystem\" : true, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    { \n      \"id\" : \"6215035\", \n      \"name\" : \"_queues\", \n      \"isSystem\" : true, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    { \n      \"id\" : \"5363067\", \n      \"name\" : \"_statistics15\", \n      \"isSystem\" : true, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    { \n      \"id\" : \"251259\", \n      \"name\" : \"_users\", \n      \"isSystem\" : true, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    { \n      \"id\" : \"2479483\", \n      \"name\" : \"_cluster_kickstarter_plans\", \n      \"isSystem\" : true, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    { \n      \"id\" : \"1258345851\", \n      \"name\" : \"animals\", \n      \"isSystem\" : false, \n      \"status\" : 3, \n      \"type\" : 2 \n    } \n  ], \n  \"names\" : { \n    \"_configuration\" : { \n      \"id\" : \"5756283\", \n      \"name\" : \"_configuration\", \n      \"isSystem\" : true, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    \"_routing\" : { \n      \"id\" : \"2348411\", \n      \"name\" : \"_routing\", \n      \"isSystem\" : true, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    \"_statisticsRaw\" : { \n      \"id\" : \"4576635\", \n      \"name\" : \"_statisticsRaw\", \n      \"isSystem\" : true, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    \"_modules\" : { \n      \"id\" : \"2217339\", \n      \"name\" : \"_modules\", \n      \"isSystem\" : true, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    \"_aqlfunctions\" : { \n      \"id\" : \"4445563\", \n      \"name\" : \"_aqlfunctions\", \n      \"isSystem\" : true, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    \"_statistics\" : { \n      \"id\" : \"4969851\", \n      \"name\" : \"_statistics\", \n      \"isSystem\" : true, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    \"_apps\" : { \n      \"id\" : \"7198075\", \n      \"name\" : \"_apps\", \n      \"isSystem\" : true, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    \"_jobs\" : { \n      \"id\" : \"6346107\", \n      \"name\" : \"_jobs\", \n      \"isSystem\" : true, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    \"_sessions\" : { \n      \"id\" : \"15586683\", \n      \"name\" : \"_sessions\", \n      \"isSystem\" : true, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    \"demo\" : { \n      \"id\" : \"1257428347\", \n      \"name\" : \"demo\", \n      \"isSystem\" : false, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    \"_graphs\" : { \n      \"id\" : \"2086267\", \n      \"name\" : \"_graphs\", \n      \"isSystem\" : true, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    \"_system_users_users\" : { \n      \"id\" : \"16307579\", \n      \"name\" : \"_system_users_users\", \n      \"isSystem\" : true, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    \"_queues\" : { \n      \"id\" : \"6215035\", \n      \"name\" : \"_queues\", \n      \"isSystem\" : true, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    \"_statistics15\" : { \n      \"id\" : \"5363067\", \n      \"name\" : \"_statistics15\", \n      \"isSystem\" : true, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    \"_users\" : { \n      \"id\" : \"251259\", \n      \"name\" : \"_users\", \n      \"isSystem\" : true, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    \"_cluster_kickstarter_plans\" : { \n      \"id\" : \"2479483\", \n      \"name\" : \"_cluster_kickstarter_plans\", \n      \"isSystem\" : true, \n      \"status\" : 3, \n      \"type\" : 2 \n    }, \n    \"animals\" : { \n      \"id\" : \"1258345851\", \n      \"name\" : \"animals\", \n      \"isSystem\" : false, \n      \"status\" : 3, \n      \"type\" : 2 \n    } \n  }, \n  \"error\" : false, \n  \"code\" : 200 \n}\n</code></pre><br><br><br>",
                    "nickname": "readsAllCollections"
                }
            ],
            "path": "/_api/collection"
        },
        {
            "operations": [
                {
                    "errorResponses": [
                        {
                            "reason": "If the <em>collection-name</em> is unknown, then a <em>HTTP 404</em> is returned. <br><br>",
                            "code": "404"
                        }
                    ],
                    "parameters": [
                        {
                            "dataType": "String",
                            "paramType": "path",
                            "required": true,
                            "name": "collection-name",
                            "description": "The name of the collection. <br><br>"
                        }
                    ],
                    "notes": "The result is an object describing the collection with the following attributes: <br><br>  <ul class=\"swagger-list\"><li><em>id</em>: The identifier of the collection.  <li><em>name</em>: The name of the collection.  <li><em>status</em>: The status of the collection as number. </ul>  - 1: new born collection  - 2: unloaded  - 3: loaded  - 4: in the process of being unloaded  - 5: deleted  - 6: loading <br><br> Every other status indicates a corrupted collection. <br><br>  <ul class=\"swagger-list\"><li><em>type</em>: The type of the collection as number. - 2: document collection (normal case) - 3: edges collection  <li><em>isSystem</em>: If <em>true</em> then the collection is a system collection.",
                    "summary": " Return information about a collection",
                    "httpMethod": "GET",
                    "examples": "",
                    "nickname": "ReturnInformationAboutACollection"
                }
            ],
            "path": "/_api/collection/{collection-name}"
        },
        {
            "operations": [
                {
                    "errorResponses": [
                        {
                            "reason": "If the <em>collection-name</em> is missing, then a <em>HTTP 400</em> is returned. <br><br>",
                            "code": "400"
                        },
                        {
                            "reason": "If the <em>collection-name</em> is unknown, then a <em>HTTP 404</em> is returned. <br><br>",
                            "code": "404"
                        }
                    ],
                    "parameters": [
                        {
                            "dataType": "String",
                            "paramType": "path",
                            "required": true,
                            "name": "collection-name",
                            "description": "The name of the collection. <br><br>"
                        }
                    ],
                    "notes": "In addition to the above, the result will always contain the <em>waitForSync</em>, <em>doCompact</em>, <em>journalSize</em>, and <em>isVolatile</em> attributes. This is achieved by forcing a load of the underlying collection. <br><br>  <ul class=\"swagger-list\"><li><em>waitForSync</em>: If <em>true</em> then creating, changing or removing documents will wait until the data has been synchronised to disk.  <li><em>doCompact</em>: Whether or not the collection will be compacted.  <li><em>journalSize</em>: The maximal size setting for journals / datafiles in bytes.  <li><em>keyOptions</em>: JSON object which contains key generation options: - <em>type</em>: specifies the type of the key generator. The currently   available generators are <em>traditional</em> and <em>autoincrement</em>. - <em>allowUserKeys</em>: if set to <em>true</em>, then it is allowed to supply   own key values in the <em>_key</em> attribute of a document. If set to   <em>false</em>, then the key generator is solely responsible for   generating keys and supplying own key values in the <em>_key</em> attribute   of documents is considered an error.  <li><em>isVolatile</em>: If <em>true</em> then the collection data will be kept in memory only and ArangoDB will not write or sync the data to disk.  </ul> In a cluster setup, the result will also contain the following attributes:  <ul class=\"swagger-list\"><li><em>numberOfShards</em>: the number of shards of the collection.  <li><em>shardKeys</em>: contains the names of document attributes that are used to determine the target shard for documents.",
                    "summary": " Read properties of a collection",
                    "httpMethod": "GET",
                    "examples": "<br><br> Using an identifier: <br><br><br><br><pre><code class=\"json\">shell&gt; curl --dump - http://localhost:8529/_api/collection/1529206139/properties\n\nHTTP/1.1 200 OK\ncontent-type: application/json; charset=utf-8\nlocation: /_db/_system/_api/collection/products/properties\n\n{ \n  \"id\" : \"1529206139\", \n  \"name\" : \"products\", \n  \"isSystem\" : false, \n  \"doCompact\" : true, \n  \"isVolatile\" : false, \n  \"journalSize\" : 1048576, \n  \"keyOptions\" : { \n    \"type\" : \"traditional\", \n    \"allowUserKeys\" : true \n  }, \n  \"waitForSync\" : true, \n  \"indexBuckets\" : 1, \n  \"status\" : 3, \n  \"type\" : 2, \n  \"error\" : false, \n  \"code\" : 200 \n}\n</code></pre><br><br><br> Using a name: <br><br><br><br><pre><code class=\"json\">shell&gt; curl --dump - http://localhost:8529/_api/collection/products/properties\n\nHTTP/1.1 200 OK\ncontent-type: application/json; charset=utf-8\nlocation: /_db/_system/_api/collection/products/properties\n\n{ \n  \"id\" : \"1529402747\", \n  \"name\" : \"products\", \n  \"isSystem\" : false, \n  \"doCompact\" : true, \n  \"isVolatile\" : false, \n  \"journalSize\" : 1048576, \n  \"keyOptions\" : { \n    \"type\" : \"traditional\", \n    \"allowUserKeys\" : true \n  }, \n  \"waitForSync\" : true, \n  \"indexBuckets\" : 1, \n  \"status\" : 3, \n  \"type\" : 2, \n  \"error\" : false, \n  \"code\" : 200 \n}\n</code></pre><br><br><br>",
                    "nickname": "ReadPropertiesOfACollection"
                }
            ],
            "path": "/_api/collection/{collection-name}/properties"
        },
        {
            "operations": [
                {
                    "errorResponses": [
                        {
                            "reason": "If the <em>collection-name</em> is missing, then a <em>HTTP 400</em> is returned. <br><br>",
                            "code": "400"
                        },
                        {
                            "reason": "If the <em>collection-name</em> is unknown, then a <em>HTTP 404</em> is returned. <br><br>",
                            "code": "404"
                        }
                    ],
                    "parameters": [
                        {
                            "dataType": "String",
                            "paramType": "path",
                            "required": true,
                            "name": "collection-name",
                            "description": "The name of the collection. <br><br>"
                        }
                    ],
                    "notes": "In addition to the above, the result also contains the number of documents. <em>Note</em> that this will always load the collection into memory. <br><br>  <ul class=\"swagger-list\"><li><em>count</em>: The number of documents inside the collection.",
                    "summary": " Return number of documents in a collection",
                    "httpMethod": "GET",
                    "examples": "<br><br> Requesting the number of documents: <br><br><br><br><pre><code class=\"json\">shell&gt; curl --dump - http://localhost:8529/_api/collection/products/count\n\nHTTP/1.1 200 OK\ncontent-type: application/json; charset=utf-8\nlocation: /_db/_system/_api/collection/products/count\n\n{ \n  \"id\" : \"1529599355\", \n  \"name\" : \"products\", \n  \"isSystem\" : false, \n  \"doCompact\" : true, \n  \"isVolatile\" : false, \n  \"journalSize\" : 1048576, \n  \"keyOptions\" : { \n    \"type\" : \"traditional\", \n    \"allowUserKeys\" : true \n  }, \n  \"waitForSync\" : true, \n  \"indexBuckets\" : 1, \n  \"count\" : 100, \n  \"status\" : 3, \n  \"type\" : 2, \n  \"error\" : false, \n  \"code\" : 200 \n}\n</code></pre><br><br><br>",
                    "nickname": "ReturnNumberOfDocumentsInACollection"
                }
            ],
            "path": "/_api/collection/{collection-name}/count"
        },
        {
            "operations": [
                {
                    "errorResponses": [
                        {
                            "reason": "If the <em>collection-name</em> is missing, then a <em>HTTP 400</em> is returned. <br><br>",
                            "code": "400"
                        },
                        {
                            "reason": "If the <em>collection-name</em> is unknown, then a <em>HTTP 404</em> is returned. <br><br>",
                            "code": "404"
                        }
                    ],
                    "parameters": [
                        {
                            "dataType": "String",
                            "paramType": "path",
                            "required": true,
                            "name": "collection-name",
                            "description": "The name of the collection. <br><br>"
                        }
                    ],
                    "notes": "In addition to the above, the result also contains the number of documents and additional statistical information about the collection. <em>Note</em> : This will always load the collection into memory. <br><br>  <ul class=\"swagger-list\"><li><em>count</em>: The number of documents currently present in the collection.  </ul> <em> *figures.alive.count</em>: The number of curretly active documents in all datafiles   and journals of the collection. Documents that are contained in the   write-ahead log only are not reported in this figure. <br><br> <em> *figures.alive.size</em>: The total size in bytes used by all active documents of   the collection. Documents that are contained in the write-ahead log only are   not reported in this figure. <br><br>  <ul class=\"swagger-list\"><li><em>figures.dead.count</em>: The number of dead documents. This includes document versions that have been deleted or replaced by a newer version. Documents deleted or replaced that are contained the write-ahead log only are not reported in this figure.  </ul> <em> *figures.dead.size</em>: The total size in bytes used by all dead documents. <br><br> <em> *figures.dead.deletion</em>: The total number of deletion markers. Deletion markers   only contained in the write-ahead log are not reporting in this figure. <br><br>  <ul class=\"swagger-list\"><li><em>figures.datafiles.count</em>: The number of datafiles. <li><em>figures.datafiles.fileSize</em>: The total filesize of datafiles (in bytes).  <li><em>figures.journals.count</em>: The number of journal files. <li><em>figures.journals.fileSize</em>: The total filesize of all journal files (in bytes).  <li><em>figures.compactors.count</em>: The number of compactor files. <li><em>figures.compactors.fileSize</em>: The total filesize of all compactor files (in bytes).  </ul> <em> *figures.shapefiles.count</em>: The number of shape files. This value is   deprecated and kept for compatibility reasons only. The value will always   be 0 since ArangoDB 2.0 and higher. <em> *figures.shapefiles.fileSize</em>: The total filesize of the shape files. This   value is deprecated and kept for compatibility reasons only. The value will   always be 0 in ArangoDB 2.0 and higher. <br><br> <em> *figures.shapes.count</em>: The total number of shapes used in the collection.   This includes shapes that are not in use anymore. Shapes that are contained   in the write-ahead log only are not reported in this figure. <em> *figures.shapes.size</em>: The total size of all shapes (in bytes). This includes   shapes that are not in use anymore. Shapes that are contained in the   write-ahead log only are not reported in this figure. <br><br> <em> *figures.attributes.count</em>: The total number of attributes used in the   collection. Note: the value includes data of attributes that are not in use   anymore. Attributes that are contained in the write-ahead log only are   not reported in this figure. <em> *figures.attributes.size</em>: The total size of the attribute data (in bytes).   Note: the value includes data of attributes that are not in use anymore.   Attributes that are contained in the write-ahead log only are not   reported in this figure. <br><br> <em> *figures.indexes.count</em>: The total number of indexes defined for the   collection, including the pre-defined indexes (e.g. primary index). <br><br> <em> *figures.indexes.size</em>: The total memory allocated for indexes in bytes. <br><br> <em> *figures.maxTick</em>: The tick of the last marker that was stored in a journal   of the collection. This might be 0 if the collection does not yet have   a journal. <br><br> <em> *figures.uncollectedLogfileEntries</em>: The number of markers in the write-ahead   log for this collection that have not been transferred to journals or   datafiles. <br><br>  <ul class=\"swagger-list\"><li><em>journalSize</em>: The maximal size of a journal or datafile in bytes.  </ul> <em>Note</em>: collection data that are stored in the write-ahead log only are not reported in the results. When the write-ahead log is collected, documents might be added to journals and datafiles of the collection, which may modify the figures of the collection. <br><br> Additionally, the filesizes of collection and index parameter JSON files are not reported. These files should normally have a size of a few bytes each. Please also note that the <em>fileSize</em> values are reported in bytes and reflect the logical file sizes. Some filesystems may use optimisations (e.g. sparse files) so that the actual physical file size is somewhat different. Directories and sub-directories may also require space in the file system, but this space is not reported in the <em>fileSize</em> results. <br><br> That means that the figures reported do not reflect the actual disk usage of the collection with 100% accuracy. The actual disk usage of a collection is normally slightly higher than the sum of the reported <em>fileSize</em> values. Still the sum of the <em>fileSize</em> values can still be used as a lower bound approximation of the disk usage. <br><br>",
                    "summary": " Return statistics for a collection",
                    "httpMethod": "GET",
                    "examples": "<br><br> Using an identifier and requesting the figures of the collection: <br><br><br><br><pre><code class=\"json\">shell&gt; curl --dump - http://localhost:8529/_api/collection/products/figures\n\nHTTP/1.1 200 OK\ncontent-type: application/json; charset=utf-8\nlocation: /_db/_system/_api/collection/products/figures\n\n{ \n  \"id\" : \"1549653371\", \n  \"name\" : \"products\", \n  \"isSystem\" : false, \n  \"doCompact\" : true, \n  \"isVolatile\" : false, \n  \"journalSize\" : 1048576, \n  \"keyOptions\" : { \n    \"type\" : \"traditional\", \n    \"allowUserKeys\" : true \n  }, \n  \"waitForSync\" : false, \n  \"indexBuckets\" : 1, \n  \"count\" : 1, \n  \"figures\" : { \n    \"alive\" : { \n      \"count\" : 1, \n      \"size\" : 88 \n    }, \n    \"dead\" : { \n      \"count\" : 0, \n      \"size\" : 0, \n      \"deletion\" : 0 \n    }, \n    \"datafiles\" : { \n      \"count\" : 0, \n      \"fileSize\" : 0 \n    }, \n    \"journals\" : { \n      \"count\" : 1, \n      \"fileSize\" : 1048576 \n    }, \n    \"compactors\" : { \n      \"count\" : 0, \n      \"fileSize\" : 0 \n    }, \n    \"shapefiles\" : { \n      \"count\" : 0, \n      \"fileSize\" : 0 \n    }, \n    \"shapes\" : { \n      \"count\" : 1, \n      \"size\" : 104 \n    }, \n    \"attributes\" : { \n      \"count\" : 1, \n      \"size\" : 48 \n    }, \n    \"indexes\" : { \n      \"count\" : 1, \n      \"size\" : 2008 \n    }, \n    \"lastTick\" : \"1550046587\", \n    \"uncollectedLogfileEntries\" : 0 \n  }, \n  \"status\" : 3, \n  \"type\" : 2, \n  \"error\" : false, \n  \"code\" : 200 \n}\n</code></pre><br><br><br>",
                    "nickname": "ReturnStatisticsForACollection"
                }
            ],
            "path": "/_api/collection/{collection-name}/figures"
        },
        {
            "operations": [
                {
                    "errorResponses": [
                        {
                            "reason": "If the <em>collection-name</em> is missing, then a <em>HTTP 400</em> is returned. <br><br>",
                            "code": "400"
                        },
                        {
                            "reason": "If the <em>collection-name</em> is unknown, then a <em>HTTP 404</em> is returned. <br><br>",
                            "code": "404"
                        }
                    ],
                    "parameters": [
                        {
                            "dataType": "String",
                            "paramType": "path",
                            "required": true,
                            "name": "collection-name",
                            "description": "The name of the collection. <br><br>"
                        }
                    ],
                    "notes": "In addition to the above, the result will also contain the collection's revision id. The revision id is a server-generated string that clients can use to check whether data in a collection has changed since the last revision check. <br><br>  <ul class=\"swagger-list\"><li><em>revision</em>: The collection revision id as a string.",
                    "summary": " Return collection revision id",
                    "httpMethod": "GET",
                    "examples": "<br><br> Retrieving the revision of a collection <br><br><br><br><pre><code class=\"json\">shell&gt; curl --dump - http://localhost:8529/_api/collection/products/revision\n\nHTTP/1.1 200 OK\ncontent-type: application/json; charset=utf-8\n\n{ \n  \"id\" : \"1550505339\", \n  \"name\" : \"products\", \n  \"isSystem\" : false, \n  \"status\" : 3, \n  \"type\" : 2, \n  \"revision\" : \"0\", \n  \"error\" : false, \n  \"code\" : 200 \n}\n</code></pre><br><br><br>",
                    "nickname": "ReturnCollectionRevisionId"
                }
            ],
            "path": "/_api/collection/{collection-name}/revision"
        },
        {
            "operations": [
                {
                    "errorResponses": [
                        {
                            "reason": "If the <em>collection-name</em> is missing, then a <em>HTTP 400</em> is returned. <br><br>",
                            "code": "400"
                        },
                        {
                            "reason": "If the <em>collection-name</em> is unknown, then a <em>HTTP 404</em> is returned. <br><br>",
                            "code": "404"
                        }
                    ],
                    "parameters": [
                        {
                            "dataType": "String",
                            "paramType": "path",
                            "required": true,
                            "name": "collection-name",
                            "description": "The name of the collection. <br><br>"
                        },
                        {
                            "dataType": "Boolean",
                            "paramType": "query",
                            "required": false,
                            "name": "withRevisions",
                            "description": "Whether or not to include document revision ids in the checksum calculation. <br><br>"
                        },
                        {
                            "dataType": "Boolean",
                            "paramType": "query",
                            "required": false,
                            "name": "withData",
                            "description": "Whether or not to include document body data in the checksum calculation. <br><br>"
                        }
                    ],
                    "notes": "Will calculate a checksum of the meta-data (keys and optionally revision ids) and optionally the document data in the collection. <br><br> The checksum can be used to compare if two collections on different ArangoDB instances contain the same contents. The current revision of the collection is returned too so one can make sure the checksums are calculated for the same state of data. <br><br> By default, the checksum will only be calculated on the <em>_key</em> system attribute of the documents contained in the collection. For edge collections, the system attributes <em>_from</em> and <em>_to</em> will also be included in the calculation. <br><br> By setting the optional URL parameter <em>withRevisions</em> to <em>true</em>, then revision ids (<em>_rev</em> system attributes) are included in the checksumming. <br><br> By providing the optional URL parameter <em>withData</em> with a value of <em>true</em>, the user-defined document attributes will be included in the calculation too. <em>Note</em>: Including user-defined attributes will make the checksumming slower. <br><br> The response is a JSON object with the following attributes: <br><br>  <ul class=\"swagger-list\"><li><em>checksum</em>: The calculated checksum as a number.  <li><em>revision</em>: The collection revision id as a string.  </ul> <em>Note</em>: this method is not available in a cluster. <br><br>",
                    "summary": " Return checksum for the collection",
                    "httpMethod": "GET",
                    "examples": "<br><br> Retrieving the checksum of a collection: <br><br><br><br><pre><code class=\"json\">shell&gt; curl --dump - http://localhost:8529/_api/collection/products/checksum\n\nHTTP/1.1 200 OK\ncontent-type: application/json; charset=utf-8\n\n{ \n  \"id\" : \"1550767483\", \n  \"name\" : \"products\", \n  \"isSystem\" : false, \n  \"status\" : 3, \n  \"type\" : 2, \n  \"checksum\" : 3221183775, \n  \"revision\" : \"1551095163\", \n  \"error\" : false, \n  \"code\" : 200 \n}\n</code></pre><br><br><br> Retrieving the checksum of a collection including the collection data, but not the revisions: <br><br><br><br><pre><code class=\"json\">shell&gt; curl --dump - http://localhost:8529/_api/collection/products/checksum?withRevisions=false&amp;withData=true\n\nHTTP/1.1 200 OK\ncontent-type: application/json; charset=utf-8\n\n{ \n  \"id\" : \"1551357307\", \n  \"name\" : \"products\", \n  \"isSystem\" : false, \n  \"status\" : 3, \n  \"type\" : 2, \n  \"checksum\" : 815137970, \n  \"revision\" : \"1551684987\", \n  \"error\" : false, \n  \"code\" : 200 \n}\n</code></pre><br><br><br>",
                    "nickname": "ReturnChecksumForTheCollection"
                }
            ],
            "path": "/_api/collection/{collection-name}/checksum"
        },
        {
            "operations": [
                {
                    "errorResponses": [
                        {
                            "reason": "If the <em>collection-name</em> is missing, then a <em>HTTP 400</em> is returned. <br><br>",
                            "code": "400"
                        },
                        {
                            "reason": "If the <em>collection-name</em> is unknown, then a <em>HTTP 404</em> is returned. <br><br>",
                            "code": "404"
                        }
                    ],
                    "parameters": [
                        {
                            "dataType": "String",
                            "paramType": "path",
                            "required": true,
                            "name": "collection-name",
                            "description": "The name of the collection. <br><br>"
                        }
                    ],
                    "notes": "Loads a collection into memory. Returns the collection on success. <br><br> The request body object might optionally contain the following attribute: <br><br>  <ul class=\"swagger-list\"><li><em>count</em>: If set, this controls whether the return value should include the number of documents in the collection. Setting <em>count</em> to <em>false</em> may speed up loading a collection. The default value for <em>count</em> is <em>true</em>.  </ul> On success an object with the following attributes is returned: <br><br>  <ul class=\"swagger-list\"><li><em>id</em>: The identifier of the collection.  <li><em>name</em>: The name of the collection.  <li><em>count</em>: The number of documents inside the collection. This is only returned if the <em>count</em> input parameters is set to <em>true</em> or has not been specified.  <li><em>status</em>: The status of the collection as number.  <li><em>type</em>: The collection type. Valid types are: - 2: document collection - 3: edges collection  <li><em>isSystem</em>: If <em>true</em> then the collection is a system collection.",
                    "summary": " Load collection",
                    "httpMethod": "PUT",
                    "examples": "<br><br><br><br><pre><code class=\"json\">shell&gt; curl -X PUT --dump - http://localhost:8529/_api/collection/products/load\n\nHTTP/1.1 200 OK\ncontent-type: application/json; charset=utf-8\n\n{ \n  \"id\" : \"1551947131\", \n  \"name\" : \"products\", \n  \"isSystem\" : false, \n  \"count\" : 0, \n  \"status\" : 3, \n  \"type\" : 2, \n  \"error\" : false, \n  \"code\" : 200 \n}\n</code></pre><br><br><br>",
                    "nickname": "LoadCollection"
                }
            ],
            "path": "/_api/collection/{collection-name}/load"
        },
        {
            "operations": [
                {
                    "errorResponses": [
                        {
                            "reason": "If the <em>collection-name</em> is missing, then a <em>HTTP 400</em> is returned. <br><br>",
                            "code": "400"
                        },
                        {
                            "reason": "If the <em>collection-name</em> is unknown, then a <em>HTTP 404</em> is returned. <br><br>",
                            "code": "404"
                        }
                    ],
                    "parameters": [
                        {
                            "dataType": "String",
                            "paramType": "path",
                            "required": true,
                            "name": "collection-name",
                            "description": "<br><br>"
                        }
                    ],
                    "notes": "Removes a collection from memory. This call does not delete any documents. You can use the collection afterwards; in which case it will be loaded into memory, again. On success an object with the following attributes is returned: <br><br>  <ul class=\"swagger-list\"><li><em>id</em>: The identifier of the collection.  <li><em>name</em>: The name of the collection.  <li><em>status</em>: The status of the collection as number.  <li><em>type</em>: The collection type. Valid types are: - 2: document collection - 3: edges collection  <li><em>isSystem</em>: If <em>true</em> then the collection is a system collection.",
                    "summary": " Unload collection",
                    "httpMethod": "PUT",
                    "examples": "<br><br><br><br><pre><code class=\"json\">shell&gt; curl -X PUT --dump - http://localhost:8529/_api/collection/products/unload\n\nHTTP/1.1 200 OK\ncontent-type: application/json; charset=utf-8\n\n{ \n  \"id\" : \"1552209275\", \n  \"name\" : \"products\", \n  \"isSystem\" : false, \n  \"status\" : 4, \n  \"type\" : 2, \n  \"error\" : false, \n  \"code\" : 200 \n}\n</code></pre><br><br><br>",
                    "nickname": "UnloadCollection"
                }
            ],
            "path": "/_api/collection/{collection-name}/unload"
        },
        {
            "operations": [
                {
                    "errorResponses": [],
                    "parameters": [
                        {
                            "dataType": "String",
                            "paramType": "path",
                            "required": true,
                            "name": "collection-name",
                            "description": "The name of the collection. <br><br>"
                        }
                    ],
                    "notes": "Removes all documents from the collection, but leaves the indexes intact. <br><br>",
                    "summary": " Truncate collection",
                    "httpMethod": "PUT",
                    "examples": "<br><br><br><br><pre><code class=\"json\">shell&gt; curl -X PUT --dump - http://localhost:8529/_api/collection/products/truncate\n\nHTTP/1.1 200 OK\ncontent-type: application/json; charset=utf-8\n\n{ \n  \"id\" : \"1552405883\", \n  \"name\" : \"products\", \n  \"isSystem\" : false, \n  \"status\" : 3, \n  \"type\" : 2, \n  \"error\" : false, \n  \"code\" : 200 \n}\n</code></pre><br><br><br>",
                    "nickname": "TruncateCollection"
                }
            ],
            "path": "/_api/collection/{collection-name}/truncate"
        },
        {
            "operations": [
                {
                    "errorResponses": [],
                    "parameters": [
                        {
                            "dataType": "String",
                            "paramType": "path",
                            "required": true,
                            "name": "collection-name",
                            "description": "The name of the collection. <br><br>"
                        }
                    ],
                    "notes": "Changes the properties of a collection. Expects an object with the attribute(s) <br><br>  <ul class=\"swagger-list\"><li><em>waitForSync</em>: If <em>true</em> then creating or changing a document will wait until the data has been synchronised to disk.  <li><em>journalSize</em>: The maximal size of a journal or datafile in bytes.  The value must be at least <em>1048576</em> (1 MB). Note that when changing the journalSize value, it will only have an effect for additional journals or datafiles that are created. Already existing journals or datafiles will not be affected.  </ul> On success an object with the following attributes is returned: <br><br>  <ul class=\"swagger-list\"><li><em>id</em>: The identifier of the collection.  <li><em>name</em>: The name of the collection.  <li><em>waitForSync</em>: The new value.  <li><em>journalSize</em>: The new value.  <li><em>status</em>: The status of the collection as number.  <li><em>type</em>: The collection type. Valid types are: - 2: document collection - 3: edges collection  <li><em>isSystem</em>: If <em>true</em> then the collection is a system collection.  <li><em>isVolatile</em>: If <em>true</em> then the collection data will be kept in memory only and ArangoDB will not write or sync the data to disk.  <li><em>doCompact</em>: Whether or not the collection will be compacted.  <li><em>keyOptions</em>: JSON object which contains key generation options: - <em>type</em>: specifies the type of the key generator. The currently   available generators are <em>traditional</em> and <em>autoincrement</em>. - <em>allowUserKeys</em>: if set to <em>true</em>, then it is allowed to supply   own key values in the <em>_key</em> attribute of a document. If set to   <em>false</em>, then the key generator is solely responsible for   generating keys and supplying own key values in the <em>_key</em> attribute   of documents is considered an error.  </ul> <em>Note</em>: some other collection properties, such as <em>type</em>, <em>isVolatile</em>, <em>numberOfShards</em> or <em>shardKeys</em> cannot be changed once a collection is created. <br><br>",
                    "summary": " Change properties of a collection",
                    "httpMethod": "PUT",
                    "examples": "<br><br><br><br><pre><code class=\"json\">shell&gt; curl -X PUT --data-binary @- --dump - http://localhost:8529/_api/collection/products/properties &lt;&lt;EOF\n{ \n  \"waitForSync\" : true \n}\nEOF\n\nHTTP/1.1 200 OK\ncontent-type: application/json; charset=utf-8\n\n{ \n  \"id\" : \"1552668027\", \n  \"name\" : \"products\", \n  \"isSystem\" : false, \n  \"doCompact\" : true, \n  \"isVolatile\" : false, \n  \"journalSize\" : 1048576, \n  \"keyOptions\" : { \n    \"type\" : \"traditional\", \n    \"allowUserKeys\" : true \n  }, \n  \"waitForSync\" : true, \n  \"indexBuckets\" : 1, \n  \"status\" : 3, \n  \"type\" : 2, \n  \"error\" : false, \n  \"code\" : 200 \n}\n</code></pre><br><br><br>",
                    "nickname": "ChangePropertiesOfACollection"
                }
            ],
            "path": "/_api/collection/{collection-name}/properties"
        },
        {
            "operations": [
                {
                    "errorResponses": [],
                    "parameters": [
                        {
                            "dataType": "String",
                            "paramType": "path",
                            "required": true,
                            "name": "collection-name",
                            "description": "The name of the collection to rename. <br><br>"
                        }
                    ],
                    "notes": "Renames a collection. Expects an object with the attribute(s) <br><br>  <ul class=\"swagger-list\"><li><em>name</em>: The new name.  </ul> If returns an object with the attributes <br><br>  <ul class=\"swagger-list\"><li><em>id</em>: The identifier of the collection.  <li><em>name</em>: The new name of the collection.  <li><em>status</em>: The status of the collection as number.  <li><em>type</em>: The collection type. Valid types are: - 2: document collection - 3: edges collection  <li><em>isSystem</em>: If <em>true</em> then the collection is a system collection.",
                    "summary": " Rename collection",
                    "httpMethod": "PUT",
                    "examples": "<br><br><br><br><pre><code class=\"json\">shell&gt; curl -X PUT --data-binary @- --dump - http://localhost:8529/_api/collection/products1/rename &lt;&lt;EOF\n{ \n  \"name\" : \"newname\" \n}\nEOF\n\nHTTP/1.1 200 OK\ncontent-type: application/json; charset=utf-8\n\n{ \n  \"id\" : \"1552930171\", \n  \"name\" : \"newname\", \n  \"isSystem\" : false, \n  \"status\" : 3, \n  \"type\" : 2, \n  \"error\" : false, \n  \"code\" : 200 \n}\n</code></pre><br><br><br>",
                    "nickname": "RenameCollection"
                }
            ],
            "path": "/_api/collection/{collection-name}/rename"
        },
        {
            "operations": [
                {
                    "errorResponses": [
                        {
                            "reason": "If the collection currently has no journal, <em>HTTP 400</em> is returned. <br><br>",
                            "code": "400"
                        },
                        {
                            "reason": "If the <em>collection-name</em> is unknown, then a <em>HTTP 404</em> is returned. <br><br>",
                            "code": "404"
                        }
                    ],
                    "parameters": [
                        {
                            "dataType": "String",
                            "paramType": "path",
                            "required": true,
                            "name": "collection-name",
                            "description": "The name of the collection. <br><br>"
                        }
                    ],
                    "notes": "Rotates the journal of a collection. The current journal of the collection will be closed and made a read-only datafile. The purpose of the rotate method is to make the data in the file available for compaction (compaction is only performed for read-only datafiles, and not for journals). <br><br> Saving new data in the collection subsequently will create a new journal file automatically if there is no current journal. <br><br> If returns an object with the attributes <br><br>  <ul class=\"swagger-list\"><li><em>result</em>: will be <em>true</em> if rotation succeeded  </ul> <em>Note</em>: This method is not available in a cluster. <br><br>",
                    "summary": " Rotate journal of a collection",
                    "httpMethod": "PUT",
                    "examples": "<br><br> Rotating a journal: <br><br><br><br><pre><code class=\"json\">shell&gt; curl -X PUT --data-binary @- --dump - http://localhost:8529/_api/collection/products/rotate &lt;&lt;EOF\n{ \n}\nEOF\n\nHTTP/1.1 200 OK\ncontent-type: application/json; charset=utf-8\n\n{ \n  \"result\" : true, \n  \"error\" : false, \n  \"code\" : 200 \n}\n</code></pre><br><br><br> Rotating without a journal: <br><br><br><br><pre><code class=\"json\">shell&gt; curl -X PUT --data-binary @- --dump - http://localhost:8529/_api/collection/products/rotate &lt;&lt;EOF\n{ \n}\nEOF\n\nHTTP/1.1 400 Bad Request\ncontent-type: application/json; charset=utf-8\n\n{ \n  \"error\" : true, \n  \"code\" : 400, \n  \"errorNum\" : 1105, \n  \"errorMessage\" : \"could not rotate journal: no journal\" \n}\n</code></pre><br><br><br>",
                    "nickname": "RotateJournalOfACollection"
                }
            ],
            "path": "/_api/collection/{collection-name}/rotate"
        },
        {
            "operations": [
                {
                    "errorResponses": [
                        {
                            "reason": "If the <em>collection-name</em> is missing, then a <em>HTTP 400</em> is returned. <br><br>",
                            "code": "400"
                        },
                        {
                            "reason": "If the <em>collection-name</em> is unknown, then a <em>HTTP 404</em> is returned. <br><br>",
                            "code": "404"
                        }
                    ],
                    "parameters": [
                        {
                            "dataType": "String",
                            "paramType": "path",
                            "required": true,
                            "name": "collection-name",
                            "description": "The name of the collection to drop. <br><br>"
                        }
                    ],
                    "notes": "Drops the collection identified by <em>collection-name</em>. <br><br> If the collection was successfully dropped, an object is returned with the following attributes: <br><br>  <ul class=\"swagger-list\"><li><em>error</em>: <em>false</em>  <li><em>id</em>: The identifier of the dropped collection.",
                    "summary": " Drops collection",
                    "httpMethod": "DELETE",
                    "examples": "<br><br> Using an identifier: <br><br><br><br><pre><code class=\"json\">shell&gt; curl -X DELETE --dump - http://localhost:8529/_api/collection/1554109819\n\nHTTP/1.1 200 OK\ncontent-type: application/json; charset=utf-8\n\n{ \n  \"id\" : \"1554109819\", \n  \"error\" : false, \n  \"code\" : 200 \n}\n</code></pre><br><br><br> Using a name: <br><br><br><br><pre><code class=\"json\">shell&gt; curl -X DELETE --dump - http://localhost:8529/_api/collection/products1\n\nHTTP/1.1 200 OK\ncontent-type: application/json; charset=utf-8\n\n{ \n  \"id\" : \"1554306427\", \n  \"error\" : false, \n  \"code\" : 200 \n}\n</code></pre><br><br><br>",
                    "nickname": "DropsCollection"
                }
            ],
            "path": "/_api/collection/{collection-name}"
        }
    ]
}
