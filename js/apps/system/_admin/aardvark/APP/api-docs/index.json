{
    "basePath": "/",
    "swaggerVersion": "1.1",
    "apiVersion": "0.1",
    "apis": [
        {
            "operations": [
                {
                    "errorResponses": [],
                    "parameters": [
                        {
                            "dataType": "String",
                            "paramType": "query",
                            "required": true,
                            "name": "collection",
                            "description": "The collection name. <br><br>"
                        }
                    ],
                    "notes": "<br><br> Returns an object with an attribute <em>indexes</em> containing an array of all index descriptions for the given collection. The same information is also available in the <em>identifiers</em> as an object with the index handles as keys. <br><br>",
                    "summary": " Read all indexes of a collection",
                    "httpMethod": "GET",
                    "examples": "<br><br> Return information about all indexes: <br><br><br><br><pre><code class=\"json\">shell&gt; curl --dump - http:<span class=\"hljs-comment\">//localhost:8529/_api/index?collection=products</span>\n\nHTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">200</span> OK\ncontent-type: application/json; charset=utf-<span class=\"hljs-number\">8</span>\n\n{ \n  <span class=\"hljs-string\">\"indexes\"</span> : [ \n    { \n      <span class=\"hljs-string\">\"id\"</span> : <span class=\"hljs-string\">\"products/0\"</span>, \n      <span class=\"hljs-string\">\"type\"</span> : <span class=\"hljs-string\">\"primary\"</span>, \n      <span class=\"hljs-string\">\"fields\"</span> : [ \n        <span class=\"hljs-string\">\"_key\"</span> \n      ], \n      <span class=\"hljs-string\">\"selectivityEstimate\"</span> : <span class=\"hljs-number\">1</span>, \n      <span class=\"hljs-string\">\"unique\"</span> : <span class=\"hljs-literal\">true</span>, \n      <span class=\"hljs-string\">\"sparse\"</span> : <span class=\"hljs-literal\">false</span> \n    }, \n    { \n      <span class=\"hljs-string\">\"id\"</span> : <span class=\"hljs-string\">\"products/829276124\"</span>, \n      <span class=\"hljs-string\">\"type\"</span> : <span class=\"hljs-string\">\"hash\"</span>, \n      <span class=\"hljs-string\">\"fields\"</span> : [ \n        <span class=\"hljs-string\">\"name\"</span> \n      ], \n      <span class=\"hljs-string\">\"selectivityEstimate\"</span> : <span class=\"hljs-number\">1</span>, \n      <span class=\"hljs-string\">\"unique\"</span> : <span class=\"hljs-literal\">false</span>, \n      <span class=\"hljs-string\">\"sparse\"</span> : <span class=\"hljs-literal\">false</span> \n    }, \n    { \n      <span class=\"hljs-string\">\"id\"</span> : <span class=\"hljs-string\">\"products/829538268\"</span>, \n      <span class=\"hljs-string\">\"type\"</span> : <span class=\"hljs-string\">\"skiplist\"</span>, \n      <span class=\"hljs-string\">\"fields\"</span> : [ \n        <span class=\"hljs-string\">\"price\"</span> \n      ], \n      <span class=\"hljs-string\">\"unique\"</span> : <span class=\"hljs-literal\">false</span>, \n      <span class=\"hljs-string\">\"sparse\"</span> : <span class=\"hljs-literal\">true</span> \n    } \n  ], \n  <span class=\"hljs-string\">\"identifiers\"</span> : { \n    <span class=\"hljs-string\">\"products/0\"</span> : { \n      <span class=\"hljs-string\">\"id\"</span> : <span class=\"hljs-string\">\"products/0\"</span>, \n      <span class=\"hljs-string\">\"type\"</span> : <span class=\"hljs-string\">\"primary\"</span>, \n      <span class=\"hljs-string\">\"fields\"</span> : [ \n        <span class=\"hljs-string\">\"_key\"</span> \n      ], \n      <span class=\"hljs-string\">\"selectivityEstimate\"</span> : <span class=\"hljs-number\">1</span>, \n      <span class=\"hljs-string\">\"unique\"</span> : <span class=\"hljs-literal\">true</span>, \n      <span class=\"hljs-string\">\"sparse\"</span> : <span class=\"hljs-literal\">false</span> \n    }, \n    <span class=\"hljs-string\">\"products/829276124\"</span> : { \n      <span class=\"hljs-string\">\"id\"</span> : <span class=\"hljs-string\">\"products/829276124\"</span>, \n      <span class=\"hljs-string\">\"type\"</span> : <span class=\"hljs-string\">\"hash\"</span>, \n      <span class=\"hljs-string\">\"fields\"</span> : [ \n        <span class=\"hljs-string\">\"name\"</span> \n      ], \n      <span class=\"hljs-string\">\"selectivityEstimate\"</span> : <span class=\"hljs-number\">1</span>, \n      <span class=\"hljs-string\">\"unique\"</span> : <span class=\"hljs-literal\">false</span>, \n      <span class=\"hljs-string\">\"sparse\"</span> : <span class=\"hljs-literal\">false</span> \n    }, \n    <span class=\"hljs-string\">\"products/829538268\"</span> : { \n      <span class=\"hljs-string\">\"id\"</span> : <span class=\"hljs-string\">\"products/829538268\"</span>, \n      <span class=\"hljs-string\">\"type\"</span> : <span class=\"hljs-string\">\"skiplist\"</span>, \n      <span class=\"hljs-string\">\"fields\"</span> : [ \n        <span class=\"hljs-string\">\"price\"</span> \n      ], \n      <span class=\"hljs-string\">\"unique\"</span> : <span class=\"hljs-literal\">false</span>, \n      <span class=\"hljs-string\">\"sparse\"</span> : <span class=\"hljs-literal\">true</span> \n    } \n  }, \n  <span class=\"hljs-string\">\"error\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"code\"</span> : <span class=\"hljs-number\">200</span> \n}\n</code></pre><br><br><br>",
                    "nickname": "ReadAllIndexesOfACollection"
                }
            ],
            "path": "/_api/index"
        },
        {
            "operations": [
                {
                    "errorResponses": [
                        {
                            "reason": "If the index exists, then a <em>HTTP 200</em> is returned. <br><br>",
                            "code": "200"
                        },
                        {
                            "reason": "If the index does not exist, then a <em>HTTP 404</em> is returned. <br><br>",
                            "code": "404"
                        }
                    ],
                    "parameters": [
                        {
                            "dataType": "String",
                            "paramType": "path",
                            "required": true,
                            "name": "index-handle",
                            "description": "The index-handle. <br><br>"
                        }
                    ],
                    "notes": "<br><br> The result is an object describing the index. It has at least the following attributes: <br><br>  <ul class=\"swagger-list\"><li><em>id</em>: the identifier of the index  <li><em>type</em>: the index type  </ul> All other attributes are type-dependent. For example, some indexes provide <em>unique</em> or <em>sparse</em> flags, whereas others don't. Some indexes also provide  a selectivity estimate in the <em>selectivityEstimate</em> attribute of the result. <br><br>",
                    "summary": "Read index",
                    "httpMethod": "GET",
                    "examples": "<br><br><br><br><pre><code class=\"json\">shell&gt; curl --dump - http:<span class=\"hljs-comment\">//localhost:8529/_api/index/products/0</span>\n\nHTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">200</span> OK\ncontent-type: application/json; charset=utf-<span class=\"hljs-number\">8</span>\n\n{ \n  <span class=\"hljs-string\">\"id\"</span> : <span class=\"hljs-string\">\"products/0\"</span>, \n  <span class=\"hljs-string\">\"type\"</span> : <span class=\"hljs-string\">\"primary\"</span>, \n  <span class=\"hljs-string\">\"fields\"</span> : [ \n    <span class=\"hljs-string\">\"_key\"</span> \n  ], \n  <span class=\"hljs-string\">\"selectivityEstimate\"</span> : <span class=\"hljs-number\">1</span>, \n  <span class=\"hljs-string\">\"unique\"</span> : <span class=\"hljs-literal\">true</span>, \n  <span class=\"hljs-string\">\"sparse\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"error\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"code\"</span> : <span class=\"hljs-number\">200</span> \n}\n</code></pre><br><br><br>",
                    "nickname": "ReadIndex"
                }
            ],
            "path": "/_api/index/{index-handle}"
        },
        {
            "operations": [
                {
                    "errorResponses": [
                        {
                            "reason": "If the index already exists, then an <em>HTTP 200</em> is returned. <br><br>",
                            "code": "200"
                        },
                        {
                            "reason": "If the index does not already exist and could be created, then an <em>HTTP 201</em> is returned. <br><br>",
                            "code": "201"
                        },
                        {
                            "reason": "If either <em>size</em> or <em>byteSize</em> contain invalid values, then an <em>HTTP 400</em> is returned. <br><br>",
                            "code": "400"
                        },
                        {
                            "reason": "If the <em>collection-name</em> is unknown, then a <em>HTTP 404</em> is returned. <br><br>",
                            "code": "404"
                        }
                    ],
                    "parameters": [
                        {
                            "dataType": "String",
                            "paramType": "query",
                            "required": true,
                            "name": "collection",
                            "description": "The collection name. <br><br>"
                        },
                        {
                            "dataType": "Json",
                            "paramType": "body",
                            "required": true,
                            "name": "cap-constraint",
                            "description": "<br><br>"
                        }
                    ],
                    "notes": "<br><br> Creates a cap constraint for the collection <em>collection-name</em>, if it does not already exist. Expects an object containing the index details. <br><br>  <ul class=\"swagger-list\"><li><em>type</em>: must be equal to <em>\"cap\"</em>.  <li><em>size</em>: The maximal number of documents for the collection. If specified, the value must be greater than zero.  <li><em>byteSize</em>: The maximal size of the active document data in the collection (in bytes). If specified, the value must be at least 16384.  </ul> <em>Note</em>: The cap constraint does not index particular attributes of the documents in a collection, but limits the number of documents in the collection to a maximum value. The cap constraint thus does not support attribute names specified in the <em>fields</em> attribute nor uniqueness of any kind via the <em>unique</em> attribute. <br><br> It is allowed to specify either <em>size</em> or <em>byteSize</em>, or both at the same time. If both are specified, then the automatic document removal will be triggered by the first non-met constraint. <br><br>",
                    "summary": " Create cap constraint",
                    "httpMethod": "POST",
                    "examples": "<br><br> Creating a cap constraint <br><br><br><br><pre><code class=\"json\">shell&gt; curl -X POST --data-binary @- --dump - http:<span class=\"hljs-comment\">//localhost:8529/_api/index?collection=products &lt;&lt;EOF</span>\n{<span class=\"hljs-string\">\"type\"</span>:<span class=\"hljs-string\">\"cap\"</span>,<span class=\"hljs-string\">\"size\"</span>:<span class=\"hljs-number\">10</span>}\nEOF\n\nHTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">201</span> Created\ncontent-type: application/json; charset=utf-<span class=\"hljs-number\">8</span>\n\n{ \n  <span class=\"hljs-string\">\"id\"</span> : <span class=\"hljs-string\">\"products/830980060\"</span>, \n  <span class=\"hljs-string\">\"type\"</span> : <span class=\"hljs-string\">\"cap\"</span>, \n  <span class=\"hljs-string\">\"size\"</span> : <span class=\"hljs-number\">10</span>, \n  <span class=\"hljs-string\">\"byteSize\"</span> : <span class=\"hljs-number\">0</span>, \n  <span class=\"hljs-string\">\"unique\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"isNewlyCreated\"</span> : <span class=\"hljs-literal\">true</span>, \n  <span class=\"hljs-string\">\"error\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"code\"</span> : <span class=\"hljs-number\">201</span> \n}\n</code></pre><br><br><br>",
                    "nickname": "CreateCapConstraint"
                }
            ],
            "path": "/_api/index"
        },
        {
            "operations": [
                {
                    "errorResponses": [
                        {
                            "reason": "If the index already exists, then a <em>HTTP 200</em> is returned. <br><br>",
                            "code": "200"
                        },
                        {
                            "reason": "If the index does not already exist and could be created, then a <em>HTTP 201</em> is returned. <br><br>",
                            "code": "201"
                        },
                        {
                            "reason": "If the <em>collection-name</em> is unknown, then a <em>HTTP 404</em> is returned. <br><br>",
                            "code": "404"
                        }
                    ],
                    "parameters": [
                        {
                            "dataType": "String",
                            "paramType": "query",
                            "required": true,
                            "name": "collection",
                            "description": "The collection name. <br><br>"
                        },
                        {
                            "dataType": "Json",
                            "paramType": "body",
                            "required": true,
                            "name": "index-details",
                            "description": "<br><br>"
                        }
                    ],
                    "notes": "<br><br> Creates a geo-spatial index in the collection <em>collection-name</em>, if it does not already exist. Expects an object containing the index details. <br><br>  <ul class=\"swagger-list\"><li><em>type</em>: must be equal to <em>\"geo\"</em>.  <li><em>fields</em>: An array with one or two attribute paths.  If it is an array with one attribute path <em>location</em>, then a geo-spatial index on all documents is created using <em>location</em> as path to the coordinates. The value of the attribute must be an array with at least two double values. The array must contain the latitude (first value) and the longitude (second value). All documents, which do not have the attribute path or with value that are not suitable, are ignored.  If it is an array with two attribute paths <em>latitude</em> and <em>longitude</em>, then a geo-spatial index on all documents is created using <em>latitude</em> and <em>longitude</em> as paths the latitude and the longitude. The value of the attribute <em>latitude</em> and of the attribute <em>longitude</em> must a double. All documents, which do not have the attribute paths or which values are not suitable, are ignored.  <li><em>geoJson</em>: If a geo-spatial index on a <em>location</em> is constructed and <em>geoJson</em> is <em>true</em>, then the order within the array is longitude followed by latitude. This corresponds to the format described in http://geojson.org/geojson-spec.html#positions  </ul> Geo indexes are always sparse, meaning that documents that do not contain the index attributes or have non-numeric values in the index attributes will not be indexed. <br><br>",
                    "summary": " Create geo-spatial index",
                    "httpMethod": "POST",
                    "examples": "<br><br> Creating a geo index with a location attribute: <br><br><br><br><pre><code class=\"json\">shell&gt; curl -X POST --data-binary @- --dump - http:<span class=\"hljs-comment\">//localhost:8529/_api/index?collection=products &lt;&lt;EOF</span>\n{ \n  <span class=\"hljs-string\">\"type\"</span> : <span class=\"hljs-string\">\"geo\"</span>, \n  <span class=\"hljs-string\">\"fields\"</span> : [ \n    <span class=\"hljs-string\">\"b\"</span> \n  ] \n}\nEOF\n\nHTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">201</span> Created\ncontent-type: application/json; charset=utf-<span class=\"hljs-number\">8</span>\n\n{ \n  <span class=\"hljs-string\">\"id\"</span> : <span class=\"hljs-string\">\"products/830586844\"</span>, \n  <span class=\"hljs-string\">\"type\"</span> : <span class=\"hljs-string\">\"geo1\"</span>, \n  <span class=\"hljs-string\">\"fields\"</span> : [ \n    <span class=\"hljs-string\">\"b\"</span> \n  ], \n  <span class=\"hljs-string\">\"geoJson\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"constraint\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"unique\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"ignoreNull\"</span> : <span class=\"hljs-literal\">true</span>, \n  <span class=\"hljs-string\">\"sparse\"</span> : <span class=\"hljs-literal\">true</span>, \n  <span class=\"hljs-string\">\"isNewlyCreated\"</span> : <span class=\"hljs-literal\">true</span>, \n  <span class=\"hljs-string\">\"error\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"code\"</span> : <span class=\"hljs-number\">201</span> \n}\n</code></pre><br><br><br> Creating a geo index with latitude and longitude attributes: <br><br><br><br><pre><code class=\"json\">shell&gt; curl -X POST --data-binary @- --dump - http:<span class=\"hljs-comment\">//localhost:8529/_api/index?collection=products &lt;&lt;EOF</span>\n{ \n  <span class=\"hljs-string\">\"type\"</span> : <span class=\"hljs-string\">\"geo\"</span>, \n  <span class=\"hljs-string\">\"fields\"</span> : [ \n    <span class=\"hljs-string\">\"e\"</span>, \n    <span class=\"hljs-string\">\"f\"</span> \n  ] \n}\nEOF\n\nHTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">201</span> Created\ncontent-type: application/json; charset=utf-<span class=\"hljs-number\">8</span>\n\n{ \n  <span class=\"hljs-string\">\"id\"</span> : <span class=\"hljs-string\">\"products/830128092\"</span>, \n  <span class=\"hljs-string\">\"type\"</span> : <span class=\"hljs-string\">\"geo2\"</span>, \n  <span class=\"hljs-string\">\"fields\"</span> : [ \n    <span class=\"hljs-string\">\"e\"</span>, \n    <span class=\"hljs-string\">\"f\"</span> \n  ], \n  <span class=\"hljs-string\">\"constraint\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"unique\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"ignoreNull\"</span> : <span class=\"hljs-literal\">true</span>, \n  <span class=\"hljs-string\">\"sparse\"</span> : <span class=\"hljs-literal\">true</span>, \n  <span class=\"hljs-string\">\"isNewlyCreated\"</span> : <span class=\"hljs-literal\">true</span>, \n  <span class=\"hljs-string\">\"error\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"code\"</span> : <span class=\"hljs-number\">201</span> \n}\n</code></pre><br><br><br>",
                    "nickname": "CreateGeo-spatialIndex"
                }
            ],
            "path": "/_api/index"
        },
        {
            "operations": [
                {
                    "errorResponses": [
                        {
                            "reason": "If the index already exists, then a <em>HTTP 200</em> is returned. <br><br>",
                            "code": "200"
                        },
                        {
                            "reason": "If the index does not already exist and could be created, then a <em>HTTP 201</em> is returned. <br><br>",
                            "code": "201"
                        },
                        {
                            "reason": "If the collection already contains documents and you try to create a unique hash index in such a way that there are documents violating the uniqueness, then a <em>HTTP 400</em> is returned. <br><br>",
                            "code": "400"
                        },
                        {
                            "reason": "If the <em>collection-name</em> is unknown, then a <em>HTTP 404</em> is returned. <br><br>",
                            "code": "404"
                        }
                    ],
                    "parameters": [
                        {
                            "dataType": "String",
                            "paramType": "query",
                            "required": true,
                            "name": "collection-name",
                            "description": "The collection name. <br><br>"
                        },
                        {
                            "dataType": "Json",
                            "paramType": "body",
                            "required": true,
                            "name": "index-details",
                            "description": "<br><br>"
                        }
                    ],
                    "notes": "<br><br> Creates a hash index for the collection <em>collection-name</em> if it does not already exist. The call expects an object containing the index details. The following attributes can be present in the body of the request object: <br><br>  <ul class=\"swagger-list\"><li><em>type</em>: must be equal to <em>\"hash\"</em>.  <li><em>fields</em>: an array of attribute paths.  <li><em>unique</em>: if <em>true</em>, then create a unique index.  <li><em>sparse</em>: if <em>true</em>, then create a sparse index.  </ul> In a sparse index all documents will be excluded from the index that do not  contain at least one of the specified index attributes (i.e. <em>fields</em>) or that  have a value of <em>null</em> in any of the specified index attributes. Such documents  will not be indexed, and not be taken into account for uniqueness checks if the <em>unique</em> flag is set. <br><br> In a non-sparse index, these documents will be indexed (for non-present indexed attributes, a value of <em>null</em> will be used) and will be taken into account for uniqueness checks if the <em>unique</em> flag is set. <br><br> <em>Note</em>: unique indexes on non-shard keys are not supported in a cluster. <br><br>",
                    "summary": " Create hash index",
                    "httpMethod": "POST",
                    "examples": "<br><br> Creating an unique constraint: <br><br><br><br><pre><code class=\"json\">shell&gt; curl -X POST --data-binary @- --dump - http:<span class=\"hljs-comment\">//localhost:8529/_api/index?collection=products &lt;&lt;EOF</span>\n{ \n  <span class=\"hljs-string\">\"type\"</span> : <span class=\"hljs-string\">\"hash\"</span>, \n  <span class=\"hljs-string\">\"unique\"</span> : <span class=\"hljs-literal\">true</span>, \n  <span class=\"hljs-string\">\"fields\"</span> : [ \n    <span class=\"hljs-string\">\"a\"</span>, \n    <span class=\"hljs-string\">\"b\"</span> \n  ] \n}\nEOF\n\nHTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">201</span> Created\ncontent-type: application/json; charset=utf-<span class=\"hljs-number\">8</span>\n\n{ \n  <span class=\"hljs-string\">\"id\"</span> : <span class=\"hljs-string\">\"products/833077212\"</span>, \n  <span class=\"hljs-string\">\"type\"</span> : <span class=\"hljs-string\">\"hash\"</span>, \n  <span class=\"hljs-string\">\"fields\"</span> : [ \n    <span class=\"hljs-string\">\"a\"</span>, \n    <span class=\"hljs-string\">\"b\"</span> \n  ], \n  <span class=\"hljs-string\">\"selectivityEstimate\"</span> : <span class=\"hljs-number\">1</span>, \n  <span class=\"hljs-string\">\"unique\"</span> : <span class=\"hljs-literal\">true</span>, \n  <span class=\"hljs-string\">\"sparse\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"isNewlyCreated\"</span> : <span class=\"hljs-literal\">true</span>, \n  <span class=\"hljs-string\">\"error\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"code\"</span> : <span class=\"hljs-number\">201</span> \n}\n</code></pre><br><br><br> Creating a non-unique hash index: <br><br><br><br><pre><code class=\"json\">shell&gt; curl -X POST --data-binary @- --dump - http:<span class=\"hljs-comment\">//localhost:8529/_api/index?collection=products &lt;&lt;EOF</span>\n{ \n  <span class=\"hljs-string\">\"type\"</span> : <span class=\"hljs-string\">\"hash\"</span>, \n  <span class=\"hljs-string\">\"unique\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"fields\"</span> : [ \n    <span class=\"hljs-string\">\"a\"</span>, \n    <span class=\"hljs-string\">\"b\"</span> \n  ] \n}\nEOF\n\nHTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">201</span> Created\ncontent-type: application/json; charset=utf-<span class=\"hljs-number\">8</span>\n\n{ \n  <span class=\"hljs-string\">\"id\"</span> : <span class=\"hljs-string\">\"products/832028636\"</span>, \n  <span class=\"hljs-string\">\"type\"</span> : <span class=\"hljs-string\">\"hash\"</span>, \n  <span class=\"hljs-string\">\"fields\"</span> : [ \n    <span class=\"hljs-string\">\"a\"</span>, \n    <span class=\"hljs-string\">\"b\"</span> \n  ], \n  <span class=\"hljs-string\">\"selectivityEstimate\"</span> : <span class=\"hljs-number\">1</span>, \n  <span class=\"hljs-string\">\"unique\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"sparse\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"isNewlyCreated\"</span> : <span class=\"hljs-literal\">true</span>, \n  <span class=\"hljs-string\">\"error\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"code\"</span> : <span class=\"hljs-number\">201</span> \n}\n</code></pre><br><br><br> Creating a sparse index: <br><br><br><br><pre><code class=\"json\">shell&gt; curl -X POST --data-binary @- --dump - http:<span class=\"hljs-comment\">//localhost:8529/_api/index?collection=products &lt;&lt;EOF</span>\n{ \n  <span class=\"hljs-string\">\"type\"</span> : <span class=\"hljs-string\">\"hash\"</span>, \n  <span class=\"hljs-string\">\"unique\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"sparse\"</span> : <span class=\"hljs-literal\">true</span>, \n  <span class=\"hljs-string\">\"fields\"</span> : [ \n    <span class=\"hljs-string\">\"a\"</span> \n  ] \n}\nEOF\n\nHTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">201</span> Created\ncontent-type: application/json; charset=utf-<span class=\"hljs-number\">8</span>\n\n{ \n  <span class=\"hljs-string\">\"id\"</span> : <span class=\"hljs-string\">\"products/833535964\"</span>, \n  <span class=\"hljs-string\">\"type\"</span> : <span class=\"hljs-string\">\"hash\"</span>, \n  <span class=\"hljs-string\">\"fields\"</span> : [ \n    <span class=\"hljs-string\">\"a\"</span> \n  ], \n  <span class=\"hljs-string\">\"selectivityEstimate\"</span> : <span class=\"hljs-number\">1</span>, \n  <span class=\"hljs-string\">\"unique\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"sparse\"</span> : <span class=\"hljs-literal\">true</span>, \n  <span class=\"hljs-string\">\"isNewlyCreated\"</span> : <span class=\"hljs-literal\">true</span>, \n  <span class=\"hljs-string\">\"error\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"code\"</span> : <span class=\"hljs-number\">201</span> \n}\n</code></pre><br><br><br>",
                    "nickname": "CreateHashIndex"
                }
            ],
            "path": "/_api/index"
        },
        {
            "operations": [
                {
                    "errorResponses": [
                        {
                            "reason": "If the index already exists, then a <em>HTTP 200</em> is returned. <br><br>",
                            "code": "200"
                        },
                        {
                            "reason": "If the index does not already exist and could be created, then a <em>HTTP 201</em> is returned. <br><br>",
                            "code": "201"
                        },
                        {
                            "reason": "If the collection already contains documents and you try to create a unique skip-list index in such a way that there are documents violating the uniqueness, then a <em>HTTP 400</em> is returned. <br><br>",
                            "code": "400"
                        },
                        {
                            "reason": "If the <em>collection-name</em> is unknown, then a <em>HTTP 404</em> is returned. <br><br>",
                            "code": "404"
                        }
                    ],
                    "parameters": [
                        {
                            "dataType": "String",
                            "paramType": "query",
                            "required": true,
                            "name": "collection-name",
                            "description": "The collection name. <br><br>"
                        },
                        {
                            "dataType": "Json",
                            "paramType": "body",
                            "required": true,
                            "name": "index-details",
                            "description": "<br><br>"
                        }
                    ],
                    "notes": "<br><br> Creates a skip-list index for the collection <em>collection-name</em>, if it does not already exist. The call expects an object containing the index details. The following attributes can be present in the body of the request object: <br><br>  <ul class=\"swagger-list\"><li><em>type</em>: must be equal to <em>\"skiplist\"</em>.  <li><em>fields</em>: an array of attribute paths.  <li><em>unique</em>: if <em>true</em>, then create a unique index.  <li><em>sparse</em>: if <em>true</em>, then create a sparse index.  </ul> In a sparse index all documents will be excluded from the index that do not  contain at least one of the specified index attributes (i.e. <em>fields</em>) or that  have a value of <em>null</em> in any of the specified index attributes. Such documents  will not be indexed, and not be taken into account for uniqueness checks if the <em>unique</em> flag is set. <br><br> In a non-sparse index, these documents will be indexed (for non-present indexed attributes, a value of <em>null</em> will be used) and will be taken into account for uniqueness checks if the <em>unique</em> flag is set. <br><br> <em>Note</em>: unique indexes on non-shard keys are not supported in a cluster. <br><br>",
                    "summary": " Create skip list",
                    "httpMethod": "POST",
                    "examples": "<br><br> Creating a skiplist index: <br><br><br><br><pre><code class=\"json\">shell&gt; curl -X POST --data-binary @- --dump - http:<span class=\"hljs-comment\">//localhost:8529/_api/index?collection=products &lt;&lt;EOF</span>\n{ \n  <span class=\"hljs-string\">\"type\"</span> : <span class=\"hljs-string\">\"skiplist\"</span>, \n  <span class=\"hljs-string\">\"unique\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"fields\"</span> : [ \n    <span class=\"hljs-string\">\"a\"</span>, \n    <span class=\"hljs-string\">\"b\"</span> \n  ] \n}\nEOF\n\nHTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">201</span> Created\ncontent-type: application/json; charset=utf-<span class=\"hljs-number\">8</span>\n\n{ \n  <span class=\"hljs-string\">\"id\"</span> : <span class=\"hljs-string\">\"products/832552924\"</span>, \n  <span class=\"hljs-string\">\"type\"</span> : <span class=\"hljs-string\">\"skiplist\"</span>, \n  <span class=\"hljs-string\">\"fields\"</span> : [ \n    <span class=\"hljs-string\">\"a\"</span>, \n    <span class=\"hljs-string\">\"b\"</span> \n  ], \n  <span class=\"hljs-string\">\"unique\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"sparse\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"isNewlyCreated\"</span> : <span class=\"hljs-literal\">true</span>, \n  <span class=\"hljs-string\">\"error\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"code\"</span> : <span class=\"hljs-number\">201</span> \n}\n</code></pre><br><br><br> Creating a sparse skiplist index: <br><br><br><br><pre><code class=\"json\">shell&gt; curl -X POST --data-binary @- --dump - http:<span class=\"hljs-comment\">//localhost:8529/_api/index?collection=products &lt;&lt;EOF</span>\n{ \n  <span class=\"hljs-string\">\"type\"</span> : <span class=\"hljs-string\">\"skiplist\"</span>, \n  <span class=\"hljs-string\">\"unique\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"sparse\"</span> : <span class=\"hljs-literal\">true</span>, \n  <span class=\"hljs-string\">\"fields\"</span> : [ \n    <span class=\"hljs-string\">\"a\"</span> \n  ] \n}\nEOF\n\nHTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">201</span> Created\ncontent-type: application/json; charset=utf-<span class=\"hljs-number\">8</span>\n\n{ \n  <span class=\"hljs-string\">\"id\"</span> : <span class=\"hljs-string\">\"products/833994716\"</span>, \n  <span class=\"hljs-string\">\"type\"</span> : <span class=\"hljs-string\">\"skiplist\"</span>, \n  <span class=\"hljs-string\">\"fields\"</span> : [ \n    <span class=\"hljs-string\">\"a\"</span> \n  ], \n  <span class=\"hljs-string\">\"unique\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"sparse\"</span> : <span class=\"hljs-literal\">true</span>, \n  <span class=\"hljs-string\">\"isNewlyCreated\"</span> : <span class=\"hljs-literal\">true</span>, \n  <span class=\"hljs-string\">\"error\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"code\"</span> : <span class=\"hljs-number\">201</span> \n}\n</code></pre><br><br><br>",
                    "nickname": "CreateSkipList"
                }
            ],
            "path": "/_api/index"
        },
        {
            "operations": [
                {
                    "errorResponses": [
                        {
                            "reason": "If the index already exists, then a <em>HTTP 200</em> is returned. <br><br>",
                            "code": "200"
                        },
                        {
                            "reason": "If the index does not already exist and could be created, then a <em>HTTP 201</em> is returned. <br><br>",
                            "code": "201"
                        },
                        {
                            "reason": "If the <em>collection-name</em> is unknown, then a <em>HTTP 404</em> is returned. <br><br>",
                            "code": "404"
                        }
                    ],
                    "parameters": [
                        {
                            "dataType": "String",
                            "paramType": "query",
                            "required": true,
                            "name": "collection-name",
                            "description": "The collection name. <br><br>"
                        },
                        {
                            "dataType": "Json",
                            "paramType": "body",
                            "required": true,
                            "name": "index-details",
                            "description": "<br><br>"
                        }
                    ],
                    "notes": "<br><br> Creates a fulltext index for the collection <em>collection-name</em>, if it does not already exist. The call expects an object containing the index details. The following attributes can be present in the body of the request object: <br><br>  <ul class=\"swagger-list\"><li><em>type</em>: must be equal to <em>\"fulltext\"</em>.  <li><em>fields</em>: an array of attribute names. Currently, the array is limited to exactly one attribute.  <li><em>minLength</em>: Minimum character length of words to index. Will default to a server-defined value if unspecified. It is thus recommended to set this value explicitly when creating the index.",
                    "summary": " Create fulltext index",
                    "httpMethod": "POST",
                    "examples": "<br><br> Creating a fulltext index: <br><br><br><br><pre><code class=\"json\">shell&gt; curl -X POST --data-binary @- --dump - http:<span class=\"hljs-comment\">//localhost:8529/_api/index?collection=products &lt;&lt;EOF</span>\n{ \n  <span class=\"hljs-string\">\"type\"</span> : <span class=\"hljs-string\">\"fulltext\"</span>, \n  <span class=\"hljs-string\">\"fields\"</span> : [ \n    <span class=\"hljs-string\">\"text\"</span> \n  ] \n}\nEOF\n\nHTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">201</span> Created\ncontent-type: application/json; charset=utf-<span class=\"hljs-number\">8</span>\n\n{ \n  <span class=\"hljs-string\">\"id\"</span> : <span class=\"hljs-string\">\"products/831438812\"</span>, \n  <span class=\"hljs-string\">\"type\"</span> : <span class=\"hljs-string\">\"fulltext\"</span>, \n  <span class=\"hljs-string\">\"fields\"</span> : [ \n    <span class=\"hljs-string\">\"text\"</span> \n  ], \n  <span class=\"hljs-string\">\"unique\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"sparse\"</span> : <span class=\"hljs-literal\">true</span>, \n  <span class=\"hljs-string\">\"minLength\"</span> : <span class=\"hljs-number\">2</span>, \n  <span class=\"hljs-string\">\"isNewlyCreated\"</span> : <span class=\"hljs-literal\">true</span>, \n  <span class=\"hljs-string\">\"error\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"code\"</span> : <span class=\"hljs-number\">201</span> \n}\n</code></pre><br><br><br>",
                    "nickname": "CreateFulltextIndex"
                }
            ],
            "path": "/_api/index"
        },
        {
            "operations": [
                {
                    "errorResponses": [
                        {
                            "reason": "If the index already exists, then an <em>HTTP 200</em> is returned. <br><br>",
                            "code": "200"
                        },
                        {
                            "reason": "If the index does not already exist and could be created, then an <em>HTTP 201</em> is returned. <br><br>",
                            "code": "201"
                        },
                        {
                            "reason": "If an invalid index description is posted or attributes are used that the target index will not support, then an <em>HTTP 400</em> is returned. <br><br>",
                            "code": "400"
                        },
                        {
                            "reason": "If <em>collection</em> is unknown, then an <em>HTTP 404</em> is returned. <br><br>",
                            "code": "404"
                        }
                    ],
                    "parameters": [
                        {
                            "dataType": "String",
                            "paramType": "query",
                            "required": true,
                            "name": "collection",
                            "description": "The collection name. <br><br>"
                        },
                        {
                            "dataType": "Json",
                            "paramType": "body",
                            "required": true,
                            "name": "index-details",
                            "description": "<br><br>"
                        }
                    ],
                    "notes": "<br><br> Creates a new index in the collection <em>collection</em>. Expects an object containing the index details. <br><br> The type of the index to be created must specified in the <em>type</em> attribute of the index details. Depending on the index type, additional other attributes may need to specified in the request in order to create the index. <br><br> Most indexes (a notable exception being the cap constraint) require the array of attributes to be indexed in the <em>fields</em> attribute of the index details. Depending on the index type, a single attribute or multiple attributes can be indexed. <br><br> Indexing system attributes such as <em>_id</em>, <em>_key</em>, <em>_from</em>, and <em>_to</em> is not supported for user-defined indexes. Manually creating an index using any of these attributes will fail with an error. <br><br> Some indexes can be created as unique or non-unique variants. Uniqueness can be controlled for most indexes by specifying the <em>unique</em> flag in the index details. Setting it to <em>true</em> will create a unique index. Setting it to <em>false</em> or omitting the <em>unique</em> attribute will create a non-unique index. <br><br> <em>Note</em>: The following index types do not support uniqueness, and using the <em>unique</em> attribute with these types may lead to an error: <br><br>  <ul class=\"swagger-list\"><li>cap constraints <li>fulltext indexes  </ul> <em>Note</em>: Unique indexes on non-shard keys are not supported in a cluster. <br><br> Hash and skiplist indexes can optionally be created in a sparse variant. A sparse index will be created if the <em>sparse</em> attribute in the index details is set to <em>true</em>. Sparse indexes do not index documents for which any of the index attributes is either not set or is <em>null</em>.  <br><br>",
                    "summary": " Create index",
                    "httpMethod": "POST",
                    "examples": "",
                    "nickname": "CreateIndex"
                }
            ],
            "path": "/_api/index"
        },
        {
            "operations": [
                {
                    "errorResponses": [
                        {
                            "reason": "If the index could be deleted, then an <em>HTTP 200</em> is returned. <br><br>",
                            "code": "200"
                        },
                        {
                            "reason": "If the <em>index-handle</em> is unknown, then an <em>HTTP 404</em> is returned.",
                            "code": "404"
                        }
                    ],
                    "parameters": [
                        {
                            "dataType": "String",
                            "paramType": "query",
                            "required": true,
                            "name": "index-handle",
                            "description": "The index handle. <br><br>"
                        }
                    ],
                    "notes": "<br><br> Deletes an index with <em>index-handle</em>. <br><br>",
                    "summary": " Delete index",
                    "httpMethod": "DELETE",
                    "examples": "<br><br><br><br><pre><code class=\"json\">shell&gt; curl -X DELETE --dump - http:<span class=\"hljs-comment\">//localhost:8529/_api/index/products/834519004</span>\n\nHTTP/<span class=\"hljs-number\">1.1</span> <span class=\"hljs-number\">200</span> OK\ncontent-type: application/json; charset=utf-<span class=\"hljs-number\">8</span>\n\n{ \n  <span class=\"hljs-string\">\"id\"</span> : <span class=\"hljs-string\">\"products/834519004\"</span>, \n  <span class=\"hljs-string\">\"error\"</span> : <span class=\"hljs-literal\">false</span>, \n  <span class=\"hljs-string\">\"code\"</span> : <span class=\"hljs-number\">200</span> \n}\n</code></pre><br><br><br>",
                    "nickname": "DeleteIndex"
                }
            ],
            "path": "/_api/index/{index-handle}"
        }
    ]
}
